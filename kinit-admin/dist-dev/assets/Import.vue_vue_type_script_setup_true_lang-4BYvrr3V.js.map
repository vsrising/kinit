{"version":3,"file":"Import.vue_vue_type_script_setup_true_lang-4BYvrr3V.js","sources":["../../src/views/Vadmin/Auth/User/components/Import.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {\n  ElLink,\n  ElRow,\n  ElCol,\n  ElTable,\n  ElTableColumn,\n  ElUpload,\n  ElTooltip,\n  UploadProps,\n  ElMessage,\n  ElPopconfirm\n} from 'element-plus'\nimport { getImportTemplateApi, postImportUserApi } from '@/api/vadmin/auth/user'\nimport { ref } from 'vue'\n\nconst emit = defineEmits(['getList'])\n\nconst beforeFileUpload: UploadProps['beforeUpload'] = (rawFile) => {\n  const isExcel = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'].includes(\n    rawFile.type\n  )\n  const isLtSize = rawFile.size / 1024 / 1024 < 10\n\n  if (!isExcel) {\n    ElMessage.error('上传文件必须是 XLSX 格式!')\n  }\n  if (!isLtSize) {\n    ElMessage.error('上传文件大小不能超过 10MB!')\n  }\n  return isExcel && isLtSize\n}\n\nconst importFile = ref()\nconst tableData = ref([] as Recordable[])\nconst resultTableData = ref([] as Recordable[])\n\nconst handleUpload = async (file) => {\n  tableData.value = []\n  tableData.value.push({\n    filename: file.file.name,\n    filesize: (file.file.size / 1024).toFixed(1) + 'KB',\n    status: '上传成功'\n  })\n  importFile.value = file.file\n}\n\nconst handleDelete = () => {\n  tableData.value = []\n  importFile.value = null\n}\n\nconst importLoading = ref(false)\nconst successTotalNumber = ref(0)\n\nconst handleImport = async () => {\n  importLoading.value = true\n  const formData = new FormData()\n  formData.append('file', importFile.value)\n  try {\n    const res = await postImportUserApi(formData)\n    if (res) {\n      resultTableData.value.push({\n        filename: importFile.value.name,\n        success_number: res.data.success_number,\n        error_number: res.data.error_number,\n        error_url: res.data.error_url\n      })\n      successTotalNumber.value += res.data.success_number\n      handleDelete()\n      emit('getList')\n    }\n  } finally {\n    importLoading.value = false\n  }\n}\n\nconst downloadTemplate = async () => {\n  ElMessage.info('正在下载请稍等！')\n  const res = await getImportTemplateApi()\n  if (res) {\n    const a = document.createElement('a')\n    a.style.display = 'none'\n    a.href = res.data.url\n    a.target = '_blank'\n    a.download = res.data.filename\n    const event = new MouseEvent('click')\n    a.dispatchEvent(event)\n  }\n}\n\nconst downloadErrorFile = async (row: Recordable) => {\n  ElMessage.info('正在下载请稍等！')\n  const a = document.createElement('a')\n  a.style.display = 'none'\n  a.href = row.error_url\n  a.target = '_blank'\n  a.download = row.filename\n  const event = new MouseEvent('click')\n  a.dispatchEvent(event)\n}\n</script>\n\n<template>\n  <div>\n    <span>导入步骤：</span>\n    <ol>\n      <li style=\"margin-top: 7px\">\n        <ElLink @click=\"downloadTemplate\" target=\"_blank\" type=\"primary\">\n          下载最新批量导入模板\n        </ElLink>\n      </li>\n      <li style=\"margin-top: 7px\">编辑模板文件，（将需要导入的数据按格式填写进去）</li>\n      <li style=\"margin-top: 7px\">上传模板文件，点击确认导入</li>\n      <li style=\"margin-top: 7px\">查看导入结果，是否全部导入</li>\n    </ol>\n  </div>\n  <div>\n    <ElRow :gutter=\"10\" class=\"!mt-0 !mr-0\">\n      <ElCol :span=\"1.5\">\n        <div>\n          <ElUpload\n            action=\"\"\n            :http-request=\"handleUpload\"\n            :data=\"{ path: 'users' }\"\n            :show-file-list=\"false\"\n            :before-upload=\"beforeFileUpload\"\n            accept=\".xlsx\"\n            :disabled=\"tableData.length > 0\"\n          >\n            <ElTooltip effect=\"dark\" content=\"只支持上传XLSX文件\" placement=\"top\">\n              <BaseButton type=\"primary\" size=\"small\" :disabled=\"tableData.length > 0\"\n                >上传文件</BaseButton\n              >\n            </ElTooltip>\n          </ElUpload>\n        </div>\n      </ElCol>\n      <ElCol :span=\"1.5\">\n        <BaseButton\n          type=\"primary\"\n          size=\"small\"\n          :disabled=\"tableData.length === 0\"\n          :loading=\"importLoading\"\n          @click=\"handleImport\"\n          >确认导入</BaseButton\n        >\n      </ElCol>\n    </ElRow>\n    <ElTable :data=\"tableData\" :border=\"true\" style=\"width: 100%\" class=\"mt-10px\">\n      <ElTableColumn prop=\"filename\" label=\"文件名称\" align=\"left\" />\n      <ElTableColumn prop=\"filesize\" label=\"文件大小\" width=\"100\" align=\"center\" />\n      <ElTableColumn prop=\"status\" label=\"上传状态\" width=\"100\" align=\"center\" />\n      <ElTableColumn fixed=\"right\" label=\"操作\" width=\"130\" align=\"center\">\n        <template #default>\n          <ElPopconfirm title=\"确认删除吗?\" @confirm=\"handleDelete\">\n            <template #reference>\n              <BaseButton link type=\"primary\" size=\"small\">删除</BaseButton>\n            </template>\n          </ElPopconfirm>\n        </template>\n      </ElTableColumn>\n    </ElTable>\n  </div>\n  <div class=\"mt-10px\">\n    <div class=\"flex justify-between mr-10px\">\n      <span>导入结果</span>\n      <span>成功导入总数：{{ successTotalNumber }}</span>\n    </div>\n    <ElTable :data=\"resultTableData\" :border=\"true\" style=\"width: 100%\" class=\"mt-10px\">\n      <ElTableColumn prop=\"filename\" label=\"文件名称\" align=\"left\" />\n      <ElTableColumn prop=\"success_number\" label=\"成功数量\" width=\"100\" align=\"center\" />\n      <ElTableColumn prop=\"error_number\" label=\"失败数量\" width=\"100\" align=\"center\">\n        <template #default=\"scope\">\n          <span style=\"color: red\">{{ scope.row.error_number }}</span>\n        </template>\n      </ElTableColumn>\n      <ElTableColumn fixed=\"right\" label=\"操作\" width=\"130\" align=\"center\">\n        <template #default=\"scope\">\n          <ElLink\n            v-if=\"scope.row.error_number > 0\"\n            @click=\"downloadErrorFile(scope.row)\"\n            target=\"_blank\"\n            type=\"primary\"\n            >下载失败数据</ElLink\n          >\n          <ElLink v-else type=\"success\" :underline=\"false\">成功全部导入</ElLink>\n        </template>\n      </ElTableColumn>\n    </ElTable>\n  </div>\n</template>\n"],"names":["emit","__emit","beforeFileUpload","rawFile","isExcel","isLtSize","ElMessage","importFile","ref","tableData","resultTableData","handleUpload","file","__async","handleDelete","importLoading","successTotalNumber","handleImport","formData","res","postImportUserApi","downloadTemplate","getImportTemplateApi","a","event","downloadErrorFile","row"],"mappings":"o4BAgBA,MAAMA,EAAOC,EAEPC,EAAiDC,GAAY,CAC3D,MAAAC,EAAU,CAAC,mEAAmE,EAAE,SACpFD,EAAQ,IAAA,EAEJE,EAAWF,EAAQ,KAAO,KAAO,KAAO,GAE9C,OAAKC,GACHE,EAAU,MAAM,kBAAkB,EAE/BD,GACHC,EAAU,MAAM,kBAAkB,EAE7BF,GAAWC,CAAA,EAGdE,EAAaC,IACbC,EAAYD,EAAI,CAAA,CAAkB,EAClCE,EAAkBF,EAAI,CAAA,CAAkB,EAExCG,EAAsBC,GAASC,EAAA,sBACnCJ,EAAU,MAAQ,GAClBA,EAAU,MAAM,KAAK,CACnB,SAAUG,EAAK,KAAK,KACpB,UAAWA,EAAK,KAAK,KAAO,MAAM,QAAQ,CAAC,EAAI,KAC/C,OAAQ,MAAA,CACT,EACDL,EAAW,MAAQK,EAAK,IAAA,GAGpBE,EAAe,IAAM,CACzBL,EAAU,MAAQ,GAClBF,EAAW,MAAQ,IAAA,EAGfQ,EAAgBP,EAAI,EAAK,EACzBQ,EAAqBR,EAAI,CAAC,EAE1BS,EAAe,IAAYJ,EAAA,sBAC/BE,EAAc,MAAQ,GAChB,MAAAG,EAAW,IAAI,SACZA,EAAA,OAAO,OAAQX,EAAW,KAAK,EACpC,GAAA,CACI,MAAAY,EAAM,MAAMC,EAAkBF,CAAQ,EACxCC,IACFT,EAAgB,MAAM,KAAK,CACzB,SAAUH,EAAW,MAAM,KAC3B,eAAgBY,EAAI,KAAK,eACzB,aAAcA,EAAI,KAAK,aACvB,UAAWA,EAAI,KAAK,SAAA,CACrB,EACkBH,EAAA,OAASG,EAAI,KAAK,eACxBL,IACbd,EAAK,SAAS,EAChB,QACA,CACAe,EAAc,MAAQ,EACxB,CAAA,GAGIM,EAAmB,IAAYR,EAAA,sBACnCP,EAAU,KAAK,UAAU,EACnB,MAAAa,EAAM,MAAMG,IAClB,GAAIH,EAAK,CACD,MAAAI,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,MAAM,QAAU,OAChBA,EAAA,KAAOJ,EAAI,KAAK,IAClBI,EAAE,OAAS,SACTA,EAAA,SAAWJ,EAAI,KAAK,SAChB,MAAAK,EAAQ,IAAI,WAAW,OAAO,EACpCD,EAAE,cAAcC,CAAK,CACvB,CAAA,GAGIC,EAA2BC,GAAoBb,EAAA,sBACnDP,EAAU,KAAK,UAAU,EACnB,MAAAiB,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,MAAM,QAAU,OAClBA,EAAE,KAAOG,EAAI,UACbH,EAAE,OAAS,SACXA,EAAE,SAAWG,EAAI,SACX,MAAAF,EAAQ,IAAI,WAAW,OAAO,EACpCD,EAAE,cAAcC,CAAK,CAAA"}