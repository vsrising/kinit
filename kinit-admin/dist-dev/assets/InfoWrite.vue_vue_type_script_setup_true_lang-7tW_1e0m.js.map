{"version":3,"file":"InfoWrite.vue_vue_type_script_setup_true_lang-7tW_1e0m.js","sources":["../../src/views/Home/components/InfoWrite.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { Form, FormSchema } from '@/components/Form'\nimport { useForm } from '@/hooks/web/useForm'\nimport { reactive, ref } from 'vue'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { useAuthStore } from '@/store/modules/auth'\nimport { ElMessage } from 'element-plus'\nimport { postCurrentUserUpdateInfo } from '@/api/vadmin/auth/user'\nimport { BaseButton } from '@/components/Button'\n\nconst { required, isTelephone } = useValidator()\n\nconst authStore = useAuthStore()\n\nconst formSchema = reactive<FormSchema[]>([\n  {\n    field: 'name',\n    label: '用户名称',\n    component: 'Input',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      rules: [required()]\n    },\n    componentProps: {\n      style: {\n        width: '50%'\n      }\n    }\n  },\n  {\n    field: 'nickname',\n    label: '用户昵称',\n    component: 'Input',\n    colProps: {\n      span: 24\n    },\n    componentProps: {\n      style: {\n        width: '50%'\n      }\n    }\n  },\n  {\n    field: 'telephone',\n    label: '手机号',\n    component: 'Input',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      rules: [required(), { validator: isTelephone, trigger: 'blur' }]\n    },\n    componentProps: {\n      style: {\n        width: '50%'\n      },\n      maxlength: 11\n    }\n  },\n  {\n    field: 'gender',\n    label: '性别',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      rules: [required()]\n    },\n    component: 'RadioGroup',\n    componentProps: {\n      options: [\n        {\n          label: '男',\n          value: '0'\n        },\n        {\n          label: '女',\n          value: '1'\n        }\n      ]\n    }\n  },\n  {\n    field: 'save',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <>\n              <div class=\"w-[50%]\">\n                <BaseButton loading={loading.value} type=\"primary\" class=\"w-[100%]\" onClick={save}>\n                  保存\n                </BaseButton>\n              </div>\n            </>\n          )\n        }\n      }\n    }\n  }\n])\n\nconst { formRegister, formMethods } = useForm()\nconst { setValues, getFormData, getElFormExpose } = formMethods\n\nsetValues(authStore.getUser)\nconst loading = ref(false)\n\n// 提交\nconst save = async () => {\n  if (authStore.getUser.id === 1) {\n    return ElMessage.warning('编辑账号为演示账号，无权限操作！')\n  }\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validate()\n  if (valid) {\n    loading.value = true\n    const formData = await getFormData()\n    try {\n      const res = await postCurrentUserUpdateInfo(formData)\n      if (res) {\n        authStore.updateUser(res.data)\n        ElMessage.success('保存成功')\n      }\n    } finally {\n      loading.value = false\n    }\n  }\n}\n</script>\n\n<template>\n  <Form\n    @register=\"formRegister\"\n    :schema=\"formSchema\"\n    hide-required-asterisk\n    class=\"dark:border-1 dark:border-[var(--el-border-color)] dark:border-solid\"\n  />\n</template>\n"],"names":["required","isTelephone","useValidator","authStore","useAuthStore","formSchema","reactive","field","label","component","colProps","span","formItemProps","rules","componentProps","style","width","validator","trigger","maxlength","options","value","slots","default","_createVNode","_Fragment","BaseButton","loading","save","_createTextVNode","formRegister","formMethods","useForm","setValues","getFormData","getElFormExpose","getUser","ref","__async","id","ElMessage","warning","elForm","validate","formData","res","postCurrentUserUpdateInfo","updateUser","data","success"],"mappings":"yhBAUA,KAAM,CAAEA,SAAAA,EAAUC,YAAAA,CAAa,EAAGC,EAAY,EAExCC,EAAYC,IAEZC,EAAaC,EAAuB,CACxC,CACEC,MAAO,OACPC,MAAO,OACPC,UAAW,QACXC,SAAU,CACRC,KAAM,EACP,EACDC,cAAe,CACbC,MAAO,CAACb,GAAU,CACnB,EACDc,eAAgB,CACdC,MAAO,CACLC,MAAO,KACT,CACF,CACF,EACA,CACET,MAAO,WACPC,MAAO,OACPC,UAAW,QACXC,SAAU,CACRC,KAAM,EACP,EACDG,eAAgB,CACdC,MAAO,CACLC,MAAO,KACT,CACF,CACF,EACA,CACET,MAAO,YACPC,MAAO,MACPC,UAAW,QACXC,SAAU,CACRC,KAAM,EACP,EACDC,cAAe,CACbC,MAAO,CAACb,IAAY,CAAEiB,UAAWhB,EAAaiB,QAAS,OAAQ,CAChE,EACDJ,eAAgB,CACdC,MAAO,CACLC,MAAO,KACR,EACDG,UAAW,EACb,CACF,EACA,CACEZ,MAAO,SACPC,MAAO,KACPE,SAAU,CACRC,KAAM,EACP,EACDC,cAAe,CACbC,MAAO,CAACb,GAAU,CACnB,EACDS,UAAW,aACXK,eAAgB,CACdM,QAAS,CACP,CACEZ,MAAO,IACPa,MAAO,GACT,EACA,CACEb,MAAO,IACPa,MAAO,IACR,CAEL,CACF,EACA,CACEd,MAAO,OACPG,SAAU,CACRC,KAAM,EACP,EACDC,cAAe,CACbU,MAAO,CACLC,QAASA,IACPC,EAAAC,EAAA,KAAA,CAAAD,EAAA,MAAA,CAAA,MAAA,WAAAA,CAAAA,EAAAE,EAAA,CAAA,QAG2BC,EAAQN,MAAK,KAAA,UAAA,MAAA,WAAA,QAA2CO,CAAI,EAAA,CAAAL,QAAAA,IAAA,CAAAM,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAO3F,CACF,CACD,CAAA,CACF,EAEK,CAAEC,aAAAA,EAAcC,YAAAA,CAAa,EAAGC,EAAO,EACvC,CAAEC,UAAAA,EAAWC,YAAAA,EAAaC,gBAAAA,CAAiB,EAAGJ,EAEpDE,EAAU9B,EAAUiC,OAAO,EAC3B,MAAMT,EAAUU,EAAI,EAAK,EAGnBT,EAAO,IAAYU,EAAA,sBACvB,GAAInC,EAAUiC,QAAQG,KAAO,EAC3B,OAAOC,EAAUC,QAAQ,kBAAkB,EAE7C,MAAMC,EAAS,MAAMP,IAErB,GADc,MAAMO,GAAAA,YAAAA,EAAQC,WACjB,CACThB,EAAQN,MAAQ,GAChB,MAAMuB,EAAW,MAAMV,IACvB,GAAI,CACF,MAAMW,EAAM,MAAMC,EAA0BF,CAAQ,EAChDC,IACF1C,EAAU4C,WAAWF,EAAIG,IAAI,EAC7BR,EAAUS,QAAQ,MAAM,EAE5B,QAAU,CACRtB,EAAQN,MAAQ,EAClB,CACF"}