{"version":3,"file":"IssueCategory-GWbNAMBP.js","sources":["../../src/views/Vadmin/Help/IssueCategory/IssueCategory.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { reactive, ref, unref } from 'vue'\nimport {\n  getIssueCategoryListApi,\n  addIssueCategoryApi,\n  getIssueCategoryApi,\n  delIssueCategoryListApi,\n  putIssueCategoryApi\n} from '@/api/vadmin/help/issue'\nimport { useTable } from '@/hooks/web/useTable'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { Table, TableColumn } from '@/components/Table'\nimport { ElSwitch, ElRow, ElCol } from 'element-plus'\nimport { Search } from '@/components/Search'\nimport { FormSchema } from '@/components/Form'\nimport { ContentWrap } from '@/components/ContentWrap'\nimport Write from './components/Write.vue'\nimport { Dialog } from '@/components/Dialog'\nimport { useDictStore } from '@/store/modules/dict'\nimport { selectDictLabel, DictDetail } from '@/utils/dict'\nimport { BaseButton } from '@/components/Button'\n\ndefineOptions({\n  name: 'HelpIssueCategory'\n})\n\nconst { t } = useI18n()\n\nconst { tableRegister, tableState, tableMethods } = useTable({\n  fetchDataApi: async () => {\n    const { pageSize, currentPage } = tableState\n    const res = await getIssueCategoryListApi({\n      page: unref(currentPage),\n      limit: unref(pageSize),\n      ...unref(searchParams)\n    })\n    return {\n      list: res.data || [],\n      total: res.count || 0\n    }\n  },\n  fetchDelApi: async (value) => {\n    const res = await delIssueCategoryListApi(value)\n    return res.code === 200\n  }\n})\n\nconst { dataList, loading, total, pageSize, currentPage } = tableState\nconst { getList, delList } = tableMethods\n\nconst platformOptions = ref<DictDetail[]>([])\n\nconst getOptions = async () => {\n  const dictStore = useDictStore()\n  const dictOptions = await dictStore.getDictObj(['sys_vadmin_platform'])\n  platformOptions.value = dictOptions.sys_vadmin_platform\n}\n\ngetOptions()\n\nconst tableColumns = reactive<TableColumn[]>([\n  {\n    field: 'id',\n    label: '编号',\n    show: true,\n    disabled: true\n  },\n  {\n    field: 'name',\n    label: '类别名称',\n    show: true,\n    disabled: true\n  },\n  {\n    field: 'platform',\n    label: '展示平台',\n    show: true,\n    slots: {\n      default: (data: any) => {\n        const row = data.row\n        return (\n          <>\n            <div>{selectDictLabel(platformOptions.value, row.platform)}</div>\n          </>\n        )\n      }\n    }\n  },\n  {\n    field: 'is_active',\n    label: '是否可见',\n    show: true,\n    slots: {\n      default: (data: any) => {\n        const row = data.row\n        return (\n          <>\n            <ElSwitch modelValue={row.is_active} disabled />\n          </>\n        )\n      }\n    }\n  },\n  {\n    field: 'create_datetime',\n    label: '创建时间',\n    show: true,\n    sortable: true\n  },\n  {\n    field: 'create_user.name',\n    label: '创建人',\n    show: true\n  },\n  {\n    field: 'action',\n    width: '120px',\n    label: '操作',\n    show: true,\n    slots: {\n      default: (data: any) => {\n        const row = data.row\n        return (\n          <>\n            <BaseButton type=\"primary\" link size=\"small\" onClick={() => editAction(row)}>\n              编辑\n            </BaseButton>\n            <BaseButton\n              type=\"danger\"\n              loading={delLoading.value}\n              link\n              size=\"small\"\n              onClick={() => delData(row)}\n            >\n              删除\n            </BaseButton>\n          </>\n        )\n      }\n    }\n  }\n])\n\nconst searchSchema = reactive<FormSchema[]>([\n  {\n    field: 'name',\n    label: '类别名称',\n    component: 'Input',\n    componentProps: {\n      clearable: true,\n      style: {\n        width: '214px'\n      }\n    }\n  },\n  {\n    field: 'platform',\n    label: '登录平台',\n    component: 'Select',\n    componentProps: {\n      style: {\n        width: '214px'\n      },\n      options: []\n    }\n  },\n  {\n    field: 'is_active',\n    label: '是否可见',\n    component: 'Select',\n    componentProps: {\n      style: {\n        width: '214px'\n      },\n      options: [\n        {\n          label: '可见',\n          value: true\n        },\n        {\n          label: '不可见',\n          value: false\n        }\n      ]\n    }\n  }\n])\n\nconst searchParams = ref({})\nconst setSearchParams = (data: any) => {\n  currentPage.value = 1\n  searchParams.value = data\n  getList()\n}\n\nconst delLoading = ref(false)\n\nconst delData = async (row: any) => {\n  delLoading.value = true\n  await delList(true, [row.id]).finally(() => {\n    delLoading.value = false\n  })\n}\n\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\n\nconst currentRow = ref()\nconst actionType = ref('')\n\nconst writeRef = ref<ComponentRef<typeof Write>>()\n\nconst saveLoading = ref(false)\n\nconst editAction = async (row: any) => {\n  const res = await getIssueCategoryApi(row.id)\n  if (res) {\n    dialogTitle.value = '编辑常见问题类别'\n    actionType.value = 'edit'\n    currentRow.value = res.data\n    dialogVisible.value = true\n  }\n}\n\nconst addAction = () => {\n  dialogTitle.value = '新增常见问题类别'\n  actionType.value = 'add'\n  currentRow.value = undefined\n  dialogVisible.value = true\n}\n\nconst save = async () => {\n  const write = unref(writeRef)\n  const formData = await write?.submit()\n  if (formData) {\n    saveLoading.value = true\n    try {\n      const res = ref({})\n      if (actionType.value === 'add') {\n        res.value = await addIssueCategoryApi(formData)\n        if (res.value) {\n          dialogVisible.value = false\n          getList()\n        }\n      } else if (actionType.value === 'edit') {\n        res.value = await putIssueCategoryApi(formData)\n        if (res.value) {\n          dialogVisible.value = false\n          getList()\n        }\n      }\n    } finally {\n      saveLoading.value = false\n    }\n  }\n}\n</script>\n\n<template>\n  <ContentWrap>\n    <Search :schema=\"searchSchema\" @reset=\"setSearchParams\" @search=\"setSearchParams\" />\n    <Table\n      v-model:current-page=\"currentPage\"\n      v-model:page-size=\"pageSize\"\n      showAction\n      :columns=\"tableColumns\"\n      default-expand-all\n      node-key=\"id\"\n      :data=\"dataList\"\n      :loading=\"loading\"\n      :pagination=\"{\n        total\n      }\"\n      @register=\"tableRegister\"\n      @refresh=\"getList\"\n    >\n      <template #toolbar>\n        <ElRow :gutter=\"10\">\n          <ElCol :span=\"1.5\">\n            <BaseButton type=\"primary\" @click=\"addAction\">新增常见问题类别</BaseButton>\n          </ElCol>\n        </ElRow>\n      </template>\n    </Table>\n  </ContentWrap>\n\n  <Dialog v-model=\"dialogVisible\" :title=\"dialogTitle\" :height=\"650\">\n    <Write ref=\"writeRef\" :current-row=\"currentRow\" />\n\n    <template #footer>\n      <BaseButton type=\"primary\" :loading=\"saveLoading\" @click=\"save\">\n        {{ t('exampleDemo.save') }}\n      </BaseButton>\n      <BaseButton @click=\"dialogVisible = false\">{{ t('dialogDemo.close') }}</BaseButton>\n    </template>\n  </Dialog>\n</template>\n"],"names":["t","useI18n","tableRegister","tableState","tableMethods","useTable","fetchDataApi","__async","pageSize","currentPage","res","getIssueCategoryListApi","__spreadValues","page","unref","limit","searchParams","list","data","total","count","fetchDelApi","value","delIssueCategoryListApi","code","dataList","loading","getList","delList","platformOptions","ref","dictOptions","useDictStore","getDictObj","sys_vadmin_platform","tableColumns","reactive","field","label","show","disabled","slots","default","row","_createVNode2","_Fragment2","selectDictLabel","platform","ElSwitch","is_active","sortable","width","BaseButton","onClick","editAction","_createTextVNode2","delLoading","delData","searchSchema","component","componentProps","clearable","style","options","setSearchParams","id","finally","dialogVisible","dialogTitle","currentRow","actionType","writeRef","saveLoading","getIssueCategoryApi","addAction","undefined","save","write","formData","submit","addIssueCategoryApi","putIssueCategoryApi"],"mappings":"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"}