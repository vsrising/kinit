{"version":3,"file":"Write.vue_vue_type_script_setup_true_lang-8a28GX3e.js","sources":["../../src/views/Vadmin/Auth/User/components/Write.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { Form, FormSchema } from '@/components/Form'\nimport { useForm } from '@/hooks/web/useForm'\nimport { PropType, reactive, watch } from 'vue'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { getRoleOptionsApi } from '@/api/vadmin/auth/role'\nimport { getDeptUserTreeOptionsApi } from '@/api/vadmin/auth/dept'\n\nconst { required, isTelephone, isEmail } = useValidator()\n\nconst props = defineProps({\n  currentRow: {\n    type: Object as PropType<any>,\n    default: () => null\n  }\n})\n\nconst formSchema = reactive<FormSchema[]>([\n  {\n    field: 'name',\n    label: '用户名称',\n    colProps: {\n      span: 12\n    },\n    component: 'Input',\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    }\n  },\n  {\n    field: 'nickname',\n    label: '用户昵称',\n    colProps: {\n      span: 12\n    },\n    component: 'Input',\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    }\n  },\n  {\n    field: 'telephone',\n    label: '手机号码',\n    colProps: {\n      span: 12\n    },\n    component: 'Input',\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    }\n  },\n  {\n    field: 'email',\n    label: '邮箱',\n    colProps: {\n      span: 12\n    },\n    component: 'Input',\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    }\n  },\n  {\n    field: 'gender',\n    label: '性别',\n    colProps: {\n      span: 12\n    },\n    component: 'RadioGroup',\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      options: [\n        {\n          label: '男',\n          value: '0'\n        },\n        {\n          label: '女',\n          value: '1'\n        }\n      ]\n    },\n    value: '0'\n  },\n  {\n    field: '',\n    label: '默认密码',\n    colProps: {\n      span: 12\n    },\n    component: 'Text',\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    },\n    value: '手机号后六位',\n    ifshow: (values) => values.id === undefined\n  },\n  {\n    field: 'is_staff',\n    label: '工作人员',\n    colProps: {\n      span: 24\n    },\n    component: 'RadioGroup',\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      options: [\n        {\n          label: '是',\n          value: true\n        },\n        {\n          label: '否',\n          value: false\n        }\n      ]\n    },\n    value: true\n  },\n  {\n    field: 'is_active',\n    label: '状态',\n    colProps: {\n      span: 24\n    },\n    component: 'RadioGroup',\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      options: [\n        {\n          label: '正常',\n          value: true\n        },\n        {\n          label: '停用',\n          value: false\n        }\n      ]\n    },\n    value: true\n  },\n  {\n    field: 'role_ids',\n    label: '角色',\n    colProps: {\n      span: 24\n    },\n    component: 'Select',\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      multiple: true\n    },\n    optionApi: async () => {\n      const res = await getRoleOptionsApi()\n      return res.data\n    },\n    value: [],\n    ifshow: (values) => values.is_staff\n  },\n  {\n    field: 'dept_ids',\n    label: '部门',\n    colProps: {\n      span: 24\n    },\n    component: 'TreeSelect',\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      multiple: true,\n      checkStrictly: true,\n      defaultExpandAll: true\n    },\n    optionApi: async () => {\n      const res = await getDeptUserTreeOptionsApi()\n      return res.data\n    },\n    value: [],\n    ifshow: (values) => values.is_staff\n  }\n])\n\nconst rules = reactive({\n  name: [required()],\n  is_active: [required()],\n  is_staff: [required()],\n  role_ids: [required()],\n  dept_ids: [required()],\n  telephone: [required(), { validator: isTelephone, trigger: 'blur' }],\n  email: [{ validator: isEmail, trigger: 'blur' }]\n})\n\nconst { formRegister, formMethods } = useForm()\nconst { setValues, getFormData, getElFormExpose } = formMethods\n\nconst submit = async () => {\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validate()\n  if (valid) {\n    const formData = await getFormData()\n    return formData\n  }\n}\n\nwatch(\n  () => props.currentRow,\n  (currentRow) => {\n    if (!currentRow) return\n    setValues(currentRow)\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\ndefineExpose({\n  submit\n})\n</script>\n\n<template>\n  <Form :rules=\"rules\" @register=\"formRegister\" :schema=\"formSchema\" />\n</template>\n"],"names":["required","isTelephone","isEmail","useValidator","props","__props","formSchema","reactive","field","label","colProps","span","component","componentProps","style","width","options","value","ifshow","values","id","undefined","multiple","optionApi","__async","getRoleOptionsApi","data","is_staff","checkStrictly","defaultExpandAll","getDeptUserTreeOptionsApi","rules","name","is_active","role_ids","dept_ids","telephone","validator","trigger","email","formRegister","formMethods","useForm","setValues","getFormData","getElFormExpose","submit","elForm","validate","watch","currentRow","deep","immediate","__expose"],"mappings":"2iBAQA,KAAM,CAAEA,SAAAA,EAAUC,YAAAA,EAAaC,QAAAA,CAAS,EAAGC,EAAY,EAEjDC,EAAQC,EAORC,EAAaC,EAAuB,CACxC,CACEC,MAAO,OACPC,MAAO,OACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,QACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACT,CACF,CACF,EACA,CACEP,MAAO,WACPC,MAAO,OACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,QACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACT,CACF,CACF,EACA,CACEP,MAAO,YACPC,MAAO,OACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,QACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACT,CACF,CACF,EACA,CACEP,MAAO,QACPC,MAAO,KACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,QACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACT,CACF,CACF,EACA,CACEP,MAAO,SACPC,MAAO,KACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,aACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACR,EACDC,QAAS,CACP,CACEP,MAAO,IACPQ,MAAO,GACT,EACA,CACER,MAAO,IACPQ,MAAO,IACR,CAEJ,EACDA,MAAO,GACT,EACA,CACET,MAAO,GACPC,MAAO,OACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,OACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACT,CACD,EACDE,MAAO,SACPC,OAASC,GAAWA,EAAOC,KAAOC,MACpC,EACA,CACEb,MAAO,WACPC,MAAO,OACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,aACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACR,EACDC,QAAS,CACP,CACEP,MAAO,IACPQ,MAAO,EACT,EACA,CACER,MAAO,IACPQ,MAAO,GACR,CAEJ,EACDA,MAAO,EACT,EACA,CACET,MAAO,YACPC,MAAO,KACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,aACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACR,EACDC,QAAS,CACP,CACEP,MAAO,KACPQ,MAAO,EACT,EACA,CACER,MAAO,KACPQ,MAAO,GACR,CAEJ,EACDA,MAAO,EACT,EACA,CACET,MAAO,WACPC,MAAO,KACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,SACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACR,EACDO,SAAU,EACX,EACDC,UAAW,IAAYC,EAAA,sBAErB,OADY,MAAMC,KACPC,IACZ,GACDT,MAAO,CAAE,EACTC,OAASC,GAAWA,EAAOQ,QAC7B,EACA,CACEnB,MAAO,WACPC,MAAO,KACPC,SAAU,CACRC,KAAM,EACP,EACDC,UAAW,aACXC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACR,EACDO,SAAU,GACVM,cAAe,GACfC,iBAAkB,EACnB,EACDN,UAAW,IAAYC,EAAA,sBAErB,OADY,MAAMM,KACPJ,IACZ,GACDT,MAAO,CAAE,EACTC,OAASC,GAAWA,EAAOQ,QAC5B,CAAA,CACF,EAEKI,EAAQxB,EAAS,CACrByB,KAAM,CAAChC,GAAU,EACjBiC,UAAW,CAACjC,GAAU,EACtB2B,SAAU,CAAC3B,GAAU,EACrBkC,SAAU,CAAClC,GAAU,EACrBmC,SAAU,CAACnC,GAAU,EACrBoC,UAAW,CAACpC,IAAY,CAAEqC,UAAWpC,EAAaqC,QAAS,MAAO,CAAC,EACnEC,MAAO,CAAC,CAAEF,UAAWnC,EAASoC,QAAS,OAAQ,CACjD,CAAC,EAEK,CAAEE,aAAAA,EAAcC,YAAAA,CAAa,EAAGC,EAAO,EACvC,CAAEC,UAAAA,EAAWC,YAAAA,EAAaC,gBAAAA,CAAiB,EAAGJ,EAE9CK,EAAS,IAAYtB,EAAA,sBACzB,MAAMuB,EAAS,MAAMF,IAErB,GADc,MAAME,GAAAA,YAAAA,EAAQC,WAG1B,OADiB,MAAMJ,MAK3BK,OAAAA,EACE,IAAM7C,EAAM8C,WACXA,GAAe,CACTA,GACLP,EAAUO,CAAU,CACtB,EACA,CACEC,KAAM,GACNC,UAAW,EACb,CACF,EAEAC,EAAa,CACXP,OAAAA,CACF,CAAC"}