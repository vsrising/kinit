{"version":3,"file":"Search.vue_vue_type_script_setup_true_lang-FyVOhxsu.js","sources":["../../src/components/Search/src/components/ActionButton.vue","../../src/components/Search/src/Search.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useIcon } from '@/hooks/web/useIcon'\nimport { propTypes } from '@/utils/propTypes'\nimport { useI18n } from '@/hooks/web/useI18n'\n\nconst emit = defineEmits(['search', 'reset', 'expand'])\n\nconst { t } = useI18n()\n\ndefineProps({\n  showSearch: propTypes.bool.def(true),\n  showReset: propTypes.bool.def(true),\n  showExpand: propTypes.bool.def(false),\n  visible: propTypes.bool.def(true),\n  searchLoading: propTypes.bool.def(false),\n  resetLoading: propTypes.bool.def(false)\n})\n\nconst onSearch = () => {\n  emit('search')\n}\n\nconst onReset = () => {\n  emit('reset')\n}\n\nconst onExpand = () => {\n  emit('expand')\n}\n</script>\n\n<template>\n  <BaseButton\n    v-if=\"showSearch\"\n    type=\"primary\"\n    :loading=\"searchLoading\"\n    :icon=\"useIcon({ icon: 'ep:search' })\"\n    @click=\"onSearch\"\n  >\n    {{ t('common.query') }}\n  </BaseButton>\n  <BaseButton\n    v-if=\"showReset\"\n    :loading=\"resetLoading\"\n    :icon=\"useIcon({ icon: 'ep:refresh-right' })\"\n    @click=\"onReset\"\n  >\n    {{ t('common.reset') }}\n  </BaseButton>\n  <BaseButton\n    v-if=\"showExpand\"\n    :icon=\"useIcon({ icon: visible ? 'ep:arrow-up' : 'ep:arrow-down' })\"\n    text\n    @click=\"onExpand\"\n  >\n    {{ t(visible ? 'common.shrink' : 'common.expand') }}\n  </BaseButton>\n</template>\n","<script setup lang=\"tsx\">\nimport { Form, FormSchema, FormSetProps } from '@/components/Form'\nimport { PropType, computed, unref, ref, watch, onMounted } from 'vue'\nimport { propTypes } from '@/utils/propTypes'\nimport { useForm } from '@/hooks/web/useForm'\nimport { findIndex } from '@/utils'\nimport { cloneDeep, set } from 'lodash-es'\nimport { initModel } from '@/components/Form/src/helper'\nimport ActionButton from './components/ActionButton.vue'\nimport { SearchProps } from './types'\nimport { FormItemProp } from 'element-plus'\nimport { isObject, isEmptyVal } from '@/utils/is'\n\nconst props = defineProps({\n  // 生成Form的布局结构数组\n  schema: {\n    type: Array as PropType<FormSchema[]>,\n    default: () => []\n  },\n  // 是否需要栅格布局\n  isCol: propTypes.bool.def(false),\n  // 表单label宽度\n  labelWidth: propTypes.oneOfType([String, Number]).def('auto'),\n  // 操作按钮风格位置\n  layout: propTypes.string.validate((v: string) => ['inline', 'bottom'].includes(v)).def('inline'),\n  // 底部按钮的对齐方式\n  buttonPosition: propTypes.string\n    .validate((v: string) => ['left', 'center', 'right'].includes(v))\n    .def('center'),\n  showSearch: propTypes.bool.def(true),\n  showReset: propTypes.bool.def(true),\n  // 是否显示伸缩\n  showExpand: propTypes.bool.def(false),\n  // 伸缩的界限字段\n  expandField: propTypes.string.def(''),\n  inline: propTypes.bool.def(true),\n  // 是否去除空值项\n  removeNoValueItem: propTypes.bool.def(true),\n  model: {\n    type: Object as PropType<Recordable>,\n    default: () => ({})\n  },\n  searchLoading: propTypes.bool.def(false),\n  resetLoading: propTypes.bool.def(false)\n})\n\nconst emit = defineEmits(['search', 'reset', 'register', 'validate'])\n\nconst visible = ref(true)\n\n// 表单数据\nconst formModel = ref<Recordable>(props.model)\n\nconst newSchema = computed(() => {\n  const propsComputed = unref(getProps)\n  let schema: FormSchema[] = cloneDeep(propsComputed.schema)\n  if (propsComputed.showExpand && propsComputed.expandField && !unref(visible)) {\n    const index = findIndex(schema, (v: FormSchema) => v.field === propsComputed.expandField)\n    schema.map((v, i) => {\n      if (i >= index) {\n        v.hidden = true\n      } else {\n        v.hidden = false\n      }\n      return v\n    })\n  }\n  if (propsComputed.layout === 'inline') {\n    schema = schema.concat([\n      {\n        field: 'action',\n        formItemProps: {\n          labelWidth: '0px',\n          slots: {\n            default: () => {\n              return (\n                <div>\n                  <ActionButton\n                    showSearch={propsComputed.showSearch}\n                    showReset={propsComputed.showReset}\n                    showExpand={propsComputed.showExpand}\n                    searchLoading={propsComputed.searchLoading}\n                    resetLoading={propsComputed.resetLoading}\n                    visible={visible.value}\n                    onExpand={setVisible}\n                    onReset={reset}\n                    onSearch={search}\n                  />\n                </div>\n              )\n            },\n            label: () => {\n              return <span>&nbsp;</span>\n            }\n          }\n        }\n      }\n    ])\n  }\n  return schema\n})\n\nconst { formRegister, formMethods } = useForm()\nconst { getElFormExpose, getFormData, getFormExpose } = formMethods\n\n// useSearch传入的props\nconst outsideProps = ref<SearchProps>({})\n\nconst mergeProps = ref<SearchProps>({})\n\nconst getProps = computed(() => {\n  const propsObj = { ...props }\n  Object.assign(propsObj, unref(mergeProps))\n  return propsObj\n})\n\nconst setProps = (props: SearchProps = {}) => {\n  mergeProps.value = Object.assign(unref(mergeProps), props)\n  // @ts-ignore\n  outsideProps.value = props\n}\n\nconst schemaRef = ref<FormSchema[]>([])\n\n// 监听表单结构化数组，重新生成formModel\nwatch(\n  () => unref(newSchema),\n  async (schema = []) => {\n    formModel.value = initModel(schema, unref(formModel))\n    schemaRef.value = schema\n  },\n  {\n    immediate: true,\n    deep: true\n  }\n)\n\nconst filterModel = async () => {\n  const model = await getFormData()\n  if (unref(getProps).removeNoValueItem) {\n    // 使用reduce过滤空值，并返回一个新对象\n    return Object.keys(model).reduce((prev, next) => {\n      const value = model[next]\n      if (!isEmptyVal(value)) {\n        if (isObject(value)) {\n          if (Object.keys(value).length > 0) {\n            prev[next] = value\n          }\n        } else {\n          prev[next] = value\n        }\n      }\n      return prev\n    }, {})\n  }\n  return model\n}\n\nconst search = async () => {\n  const elFormExpose = await getElFormExpose()\n  await elFormExpose?.validate(async (isValid) => {\n    if (isValid) {\n      const model = await filterModel()\n      emit('search', model)\n    }\n  })\n}\n\nconst reset = async () => {\n  const elFormExpose = await getElFormExpose()\n  elFormExpose?.resetFields()\n  const model = await filterModel()\n  emit('reset', model)\n}\n\nconst bottomButtonStyle = computed(() => {\n  return {\n    textAlign: unref(getProps).buttonPosition as unknown as 'left' | 'center' | 'right'\n  }\n})\n\nconst setVisible = async () => {\n  visible.value = !unref(visible)\n}\n\nconst setSchema = (schemaProps: FormSetProps[]) => {\n  const { schema } = unref(getProps)\n  for (const v of schema) {\n    for (const item of schemaProps) {\n      if (v.field === item.field) {\n        set(v, item.path, item.value)\n      }\n    }\n  }\n}\n\n// 对表单赋值\nconst setValues = async (data: Recordable = {}) => {\n  formModel.value = Object.assign(props.model, unref(formModel), data)\n  const formExpose = await getFormExpose()\n  formExpose?.setValues(data)\n}\n\nconst delSchema = (field: string) => {\n  const { schema } = unref(getProps)\n\n  const index = findIndex(schema, (v: FormSchema) => v.field === field)\n  if (index > -1) {\n    schema.splice(index, 1)\n  }\n}\n\nconst addSchema = (formSchema: FormSchema, index?: number) => {\n  const { schema } = unref(getProps)\n  if (index !== void 0) {\n    schema.splice(index, 0, formSchema)\n    return\n  }\n  schema.push(formSchema)\n}\n\nconst defaultExpose = {\n  getElFormExpose,\n  setProps,\n  setSchema,\n  setValues,\n  delSchema,\n  addSchema\n}\n\nonMounted(() => {\n  emit('register', defaultExpose)\n})\n\ndefineExpose(defaultExpose)\n\nconst onFormValidate = (prop: FormItemProp, isValid: boolean, message: string) => {\n  emit('validate', prop, isValid, message)\n}\n</script>\n\n<template>\n  <Form\n    :model=\"formModel\"\n    :is-custom=\"false\"\n    :label-width=\"getProps.labelWidth\"\n    hide-required-asterisk\n    :inline=\"getProps.inline\"\n    :is-col=\"getProps.isCol\"\n    :schema=\"schemaRef\"\n    @register=\"formRegister\"\n    @validate=\"onFormValidate\"\n  />\n\n  <template v-if=\"layout === 'bottom'\">\n    <div :style=\"bottomButtonStyle\">\n      <ActionButton\n        :show-reset=\"getProps.showReset\"\n        :show-search=\"getProps.showSearch\"\n        :show-expand=\"getProps.showExpand\"\n        :search-loading=\"getProps.searchLoading\"\n        :reset-loading=\"getProps.resetLoading\"\n        @expand=\"setVisible\"\n        @reset=\"reset\"\n        @search=\"search\"\n      />\n    </div>\n  </template>\n</template>\n"],"names":["emit","__emit","t","useI18n","onSearch","onReset","onExpand","props","__props","visible","ref","formModel","model","newSchema","computed","propsComputed","unref","getProps","schema","cloneDeep","showExpand","expandField","index","findIndex","v","field","map","i","hidden","layout","concat","formItemProps","labelWidth","slots","default","_createVNode2","ActionButton","showSearch","showReset","searchLoading","resetLoading","value","setVisible","reset","search","label","_createTextVNode","formRegister","formMethods","useForm","getElFormExpose","getFormData","getFormExpose","outsideProps","mergeProps","propsObj","__spreadValues","Object","assign","setProps","schemaRef","watch","_0","__async","initModel","immediate","deep","filterModel","removeNoValueItem","keys","reduce","prev","next","isEmptyVal","isObject","length","elFormExpose","validate","isValid","resetFields","bottomButtonStyle","textAlign","buttonPosition","defaultExpose","setSchema","schemaProps","item","set","path","setValues","data","formExpose","delSchema","splice","addSchema","formSchema","push","onMounted","__expose","onFormValidate","prop","message"],"mappings":"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"}