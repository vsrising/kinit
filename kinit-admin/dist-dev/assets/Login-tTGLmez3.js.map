{"version":3,"file":"Login-tTGLmez3.js","sources":["../../src/api/vadmin/system/record/login.ts","../../src/views/Vadmin/System/Record/Login/Login.vue"],"sourcesContent":["import request from '@/config/axios'\n\nexport const getRecordLoginListApi = (params: any): Promise<IResponse> => {\n  return request.get({ url: '/vadmin/record/logins', params })\n}\n","<script setup lang=\"tsx\">\nimport { reactive, ref, unref } from 'vue'\nimport { getRecordLoginListApi } from '@/api/vadmin/system/record/login'\nimport { useTable } from '@/hooks/web/useTable'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { Table, TableColumn } from '@/components/Table'\nimport { ElSwitch } from 'element-plus'\nimport { Search } from '@/components/Search'\nimport { FormSchema } from '@/components/Form'\nimport { ContentWrap } from '@/components/ContentWrap'\nimport Detail from './components/Detail.vue'\nimport { Dialog } from '@/components/Dialog'\nimport { selectDictLabel, DictDetail } from '@/utils/dict'\nimport { useDictStore } from '@/store/modules/dict'\nimport { BaseButton } from '@/components/Button'\n\ndefineOptions({\n  name: 'SystemRecordLogin'\n})\n\nconst { t } = useI18n()\n\nconst platformOptions = ref<DictDetail[]>([])\nconst loginMethodOptions = ref<DictDetail[]>([])\n\nconst getOptions = async () => {\n  const dictStore = useDictStore()\n  const dictOptions = await dictStore.getDictObj(['sys_vadmin_platform', 'sys_vadmin_login_method'])\n  platformOptions.value = dictOptions.sys_vadmin_platform\n  loginMethodOptions.value = dictOptions.sys_vadmin_login_method\n}\n\ngetOptions()\n\nconst { tableRegister, tableState, tableMethods } = useTable({\n  fetchDataApi: async () => {\n    const { pageSize, currentPage } = tableState\n    const res = await getRecordLoginListApi({\n      page: unref(currentPage),\n      limit: unref(pageSize),\n      ...unref(searchParams)\n    })\n    return {\n      list: res.data || [],\n      total: res.count || 0\n    }\n  }\n})\n\nconst { dataList, loading, total, pageSize, currentPage } = tableState\nconst { getList } = tableMethods\n\nconst tableColumns = reactive<TableColumn[]>([\n  {\n    field: 'id',\n    label: '编号',\n    show: true,\n    disabled: true,\n    width: '120px'\n  },\n  {\n    field: 'telephone',\n    label: '手机号',\n    width: '150px',\n    show: true,\n    disabled: true\n  },\n  {\n    field: 'status',\n    label: '登录状态',\n    show: true,\n    slots: {\n      default: (data: any) => {\n        return (\n          <>\n            <ElSwitch modelValue={data.row.status} size=\"small\" disabled />\n          </>\n        )\n      }\n    }\n  },\n  {\n    field: 'platform',\n    label: '登录平台',\n    width: '150px',\n    show: true,\n    slots: {\n      default: (data: any) => {\n        return (\n          <>\n            <div>{selectDictLabel(platformOptions.value, data.row.platform)}</div>\n          </>\n        )\n      }\n    }\n  },\n  {\n    field: 'login_method',\n    label: '认证方式',\n    width: '150px',\n    show: true,\n    slots: {\n      default: (data: any) => {\n        return (\n          <>\n            <div>{selectDictLabel(loginMethodOptions.value, data.row.login_method)}</div>\n          </>\n        )\n      }\n    }\n  },\n  {\n    field: 'ip',\n    label: '登录地址',\n    show: true,\n    disabled: true,\n    width: '150px'\n  },\n  {\n    field: 'address',\n    label: '登录地点',\n    show: true\n  },\n  {\n    field: 'postal_code',\n    label: '邮政编码',\n    show: false\n  },\n  {\n    field: 'area_code',\n    label: '地区区号',\n    show: false\n  },\n  {\n    field: 'browser',\n    label: '浏览器',\n    show: true\n  },\n  {\n    field: 'system',\n    label: '操作系统',\n    show: true\n  },\n  {\n    field: 'response',\n    label: '响应信息',\n    show: false,\n    disabled: true\n  },\n  {\n    field: 'request',\n    label: '请求信息',\n    show: false,\n    disabled: true\n  },\n  {\n    field: 'create_datetime',\n    label: '创建时间',\n    show: true,\n    sortable: true\n  },\n  {\n    field: 'action',\n    label: '操作',\n    show: true,\n    width: 100,\n    slots: {\n      default: (data: any) => {\n        const row = data.row\n        return (\n          <>\n            <BaseButton type=\"primary\" link onClick={() => action(row, 'detail')}>\n              详情\n            </BaseButton>\n          </>\n        )\n      }\n    }\n  }\n])\n\nconst searchSchema = reactive<FormSchema[]>([\n  {\n    field: 'telephone',\n    label: '手机号',\n    component: 'Input',\n    componentProps: {\n      clearable: false,\n      style: {\n        width: '214px'\n      }\n    }\n  },\n  {\n    field: 'platform',\n    label: '登录平台',\n    component: 'Select',\n    componentProps: {\n      style: {\n        width: '214px'\n      },\n      options: platformOptions.value\n    }\n  },\n  {\n    field: 'ip',\n    label: '登录地址',\n    component: 'Input',\n    componentProps: {\n      clearable: false,\n      style: {\n        width: '214px'\n      }\n    }\n  },\n  {\n    field: 'address',\n    label: '登录地点',\n    component: 'Input',\n    componentProps: {\n      clearable: false,\n      style: {\n        width: '214px'\n      }\n    }\n  },\n  {\n    field: 'status',\n    label: '登录状态',\n    component: 'Select',\n    componentProps: {\n      style: {\n        width: '214px'\n      },\n      options: [\n        {\n          label: '登录成功',\n          value: true\n        },\n        {\n          label: '登录失败',\n          value: false\n        }\n      ]\n    }\n  }\n])\n\nconst searchParams = ref({})\nconst setSearchParams = (data: any) => {\n  currentPage.value = 1\n  searchParams.value = data\n  getList()\n}\n\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\n\nconst currentRow = ref()\nconst actionType = ref('')\n\nconst action = (row: any, type: string) => {\n  dialogTitle.value = t('exampleDemo.detail')\n  actionType.value = type\n  currentRow.value = row\n  dialogVisible.value = true\n}\n</script>\n\n<template>\n  <ContentWrap>\n    <Search :schema=\"searchSchema\" @reset=\"setSearchParams\" @search=\"setSearchParams\" />\n    <Table\n      v-model:current-page=\"currentPage\"\n      v-model:page-size=\"pageSize\"\n      showAction\n      :columns=\"tableColumns\"\n      node-key=\"id\"\n      :data=\"dataList\"\n      :loading=\"loading\"\n      :pagination=\"{\n        total\n      }\"\n      @register=\"tableRegister\"\n      @refresh=\"getList\"\n    />\n  </ContentWrap>\n\n  <Dialog v-model=\"dialogVisible\" :title=\"dialogTitle\" width=\"800px\">\n    <Detail v-if=\"actionType === 'detail'\" :current-row=\"currentRow\" />\n\n    <template #footer>\n      <BaseButton @click=\"dialogVisible = false\">{{ t('dialogDemo.close') }}</BaseButton>\n    </template>\n  </Dialog>\n</template>\n"],"names":["getRecordLoginListApi","params","request","t","useI18n","platformOptions","ref","loginMethodOptions","__async","dictOptions","useDictStore","getDictObj","value","sys_vadmin_platform","sys_vadmin_login_method","tableRegister","tableState","tableMethods","useTable","fetchDataApi","pageSize","currentPage","res","__spreadValues","page","unref","limit","searchParams","list","data","total","count","dataList","loading","getList","tableColumns","reactive","field","label","show","disabled","width","slots","default","_createVNode2","_Fragment2","ElSwitch","row","status","selectDictLabel","platform","login_method","sortable","BaseButton","onClick","action","_createTextVNode2","searchSchema","component","componentProps","clearable","style","options","setSearchParams","dialogVisible","dialogTitle","currentRow","actionType","type"],"mappings":"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"}