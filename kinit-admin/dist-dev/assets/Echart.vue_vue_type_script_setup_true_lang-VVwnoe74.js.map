{"version":3,"file":"Echart.vue_vue_type_script_setup_true_lang-VVwnoe74.js","sources":["../../src/plugins/echarts/index.ts","../../src/components/Echart/src/Echart.vue"],"sourcesContent":["import * as echarts from 'echarts/core'\n\nimport {\n  BarChart,\n  LineChart,\n  PieChart,\n  MapChart,\n  PictorialBarChart,\n  RadarChart\n} from 'echarts/charts'\n\nimport {\n  TitleComponent,\n  TooltipComponent,\n  GridComponent,\n  PolarComponent,\n  AriaComponent,\n  ParallelComponent,\n  LegendComponent\n} from 'echarts/components'\n\nimport { CanvasRenderer } from 'echarts/renderers'\n\necharts.use([\n  LegendComponent,\n  TitleComponent,\n  TooltipComponent,\n  GridComponent,\n  PolarComponent,\n  AriaComponent,\n  ParallelComponent,\n  BarChart,\n  LineChart,\n  PieChart,\n  MapChart,\n  CanvasRenderer,\n  PictorialBarChart,\n  RadarChart\n])\n\nexport default echarts\n","<script setup lang=\"ts\">\nimport type { EChartsOption } from 'echarts'\nimport echarts from '@/plugins/echarts'\nimport { debounce } from 'lodash-es'\nimport 'echarts-wordcloud'\nimport { propTypes } from '@/utils/propTypes'\nimport { computed, PropType, ref, unref, watch, onMounted, onBeforeUnmount, onActivated } from 'vue'\nimport { useAppStore } from '@/store/modules/app'\nimport { isString } from '@/utils/is'\nimport { useDesign } from '@/hooks/web/useDesign'\n\nconst { getPrefixCls, variables } = useDesign()\n\nconst prefixCls = getPrefixCls('echart')\n\nconst appStore = useAppStore()\n\nconst props = defineProps({\n  options: {\n    type: Object as PropType<EChartsOption>,\n    required: true\n  },\n  width: propTypes.oneOfType([Number, String]).def(''),\n  height: propTypes.oneOfType([Number, String]).def('500px')\n})\n\nconst isDark = computed(() => appStore.getIsDark)\n\nconst theme = computed(() => {\n  const echartTheme: boolean | string = unref(isDark) ? true : 'auto'\n\n  return echartTheme\n})\n\nconst options = computed(() => {\n  return Object.assign(props.options, {\n    darkMode: unref(theme)\n  })\n})\n\nconst elRef = ref<ElRef>()\n\nlet echartRef: Nullable<echarts.ECharts> = null\n\nconst contentEl = ref<Element>()\n\nconst styles = computed(() => {\n  const width = isString(props.width) ? props.width : `${props.width}px`\n  const height = isString(props.height) ? props.height : `${props.height}px`\n\n  return {\n    width,\n    height\n  }\n})\n\nconst initChart = () => {\n  if (unref(elRef) && props.options) {\n    echartRef = echarts.init(unref(elRef) as HTMLElement)\n    echartRef?.setOption(unref(options))\n  }\n}\n\nwatch(\n  () => options.value,\n  (options) => {\n    if (echartRef) {\n      echartRef?.setOption(options)\n    }\n  },\n  {\n    deep: true\n  }\n)\n\nconst resizeHandler = debounce(() => {\n  if (echartRef) {\n    echartRef.resize()\n  }\n}, 100)\n\nconst contentResizeHandler = async (e: TransitionEvent) => {\n  if (e.propertyName === 'width') {\n    resizeHandler()\n  }\n}\n\nonMounted(() => {\n  initChart()\n\n  window.addEventListener('resize', resizeHandler)\n\n  contentEl.value = document.getElementsByClassName(`${variables.namespace}-layout-content`)[0]\n  unref(contentEl) &&\n    (unref(contentEl) as Element).addEventListener('transitionend', contentResizeHandler)\n})\n\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', resizeHandler)\n  unref(contentEl) &&\n    (unref(contentEl) as Element).removeEventListener('transitionend', contentResizeHandler)\n})\n\nonActivated(() => {\n  if (echartRef) {\n    echartRef.resize()\n  }\n})\n</script>\n\n<template>\n  <div ref=\"elRef\" :class=\"[$attrs.class, prefixCls]\" :style=\"styles\"></div>\n</template>\n"],"names":["echarts.use","LegendComponent","TitleComponent","TooltipComponent","GridComponent","PolarComponent","AriaComponent","ParallelComponent","BarChart","LineChart","PieChart","MapChart","CanvasRenderer","PictorialBarChart","RadarChart","getPrefixCls","variables","useDesign","prefixCls","appStore","useAppStore","props","__props","isDark","computed","theme","unref","options","elRef","ref","echartRef","contentEl","styles","width","isString","height","initChart","echarts","watch","resizeHandler","debounce","contentResizeHandler","e","__async","onMounted","onBeforeUnmount","onActivated"],"mappings":"y7DAuBAA,EAAY,CACVC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,EACF,CAAC,8KC3BD,KAAM,CAAE,aAAAC,EAAc,UAAAC,CAAU,EAAIC,GAAU,EAExCC,EAAYH,EAAa,QAAQ,EAEjCI,EAAWC,KAEXC,EAAQC,EASRC,EAASC,EAAS,IAAML,EAAS,SAAS,EAE1CM,EAAQD,EAAS,IACiBE,EAAMH,CAAM,EAAI,GAAO,MAG9D,EAEKI,EAAUH,EAAS,IAChB,OAAO,OAAOH,EAAM,QAAS,CAClC,SAAUK,EAAMD,CAAK,CAAA,CACtB,CACF,EAEKG,EAAQC,IAEd,IAAIC,EAAuC,KAE3C,MAAMC,EAAYF,IAEZG,EAASR,EAAS,IAAM,CACtB,MAAAS,EAAQC,EAASb,EAAM,KAAK,EAAIA,EAAM,MAAQ,GAAGA,EAAM,KAAK,KAC5Dc,EAASD,EAASb,EAAM,MAAM,EAAIA,EAAM,OAAS,GAAGA,EAAM,MAAM,KAE/D,MAAA,CACL,MAAAY,EACA,OAAAE,CAAA,CACF,CACD,EAEKC,EAAY,IAAM,CAClBV,EAAME,CAAK,GAAKP,EAAM,UACxBS,EAAYO,GAAQ,KAAKX,EAAME,CAAK,CAAgB,EACzCE,GAAA,MAAAA,EAAA,UAAUJ,EAAMC,CAAO,GACpC,EAGFW,GACE,IAAMX,EAAQ,MACbA,GAAY,CACPG,IACFA,GAAA,MAAAA,EAAW,UAAUH,GAEzB,EACA,CACE,KAAM,EACR,CAAA,EAGI,MAAAY,EAAgBC,GAAS,IAAM,CAC/BV,GACFA,EAAU,OAAO,GAElB,GAAG,EAEAW,EAA8BC,GAAuBC,EAAA,sBACrDD,EAAE,eAAiB,SACPH,GAChB,GAGF,OAAAK,GAAU,IAAM,CACJR,IAEH,OAAA,iBAAiB,SAAUG,CAAa,EAErCR,EAAA,MAAQ,SAAS,uBAAuB,GAAGf,EAAU,SAAS,iBAAiB,EAAE,CAAC,EAC5FU,EAAMK,CAAS,GACZL,EAAMK,CAAS,EAAc,iBAAiB,gBAAiBU,CAAoB,CAAA,CACvF,EAEDI,GAAgB,IAAM,CACb,OAAA,oBAAoB,SAAUN,CAAa,EAClDb,EAAMK,CAAS,GACZL,EAAMK,CAAS,EAAc,oBAAoB,gBAAiBU,CAAoB,CAAA,CAC1F,EAEDK,GAAY,IAAM,CACZhB,GACFA,EAAU,OAAO,CACnB,CACD"}