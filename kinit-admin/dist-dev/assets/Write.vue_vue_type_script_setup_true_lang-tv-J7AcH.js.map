{"version":3,"file":"Write.vue_vue_type_script_setup_true_lang-tv-J7AcH.js","sources":["../../src/views/Vadmin/Help/IssueCategory/components/Write.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { Form, FormSchema } from '@/components/Form'\nimport { useForm } from '@/hooks/web/useForm'\nimport { PropType, reactive, watch } from 'vue'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { useDictStore } from '@/store/modules/dict'\n\nconst { required } = useValidator()\n\nconst props = defineProps({\n  currentRow: {\n    type: Object as PropType<any>,\n    default: () => null\n  }\n})\n\nconst formSchema = reactive<FormSchema[]>([\n  {\n    field: 'name',\n    label: '类别名称',\n    component: 'Input',\n    colProps: {\n      span: 24\n    },\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    },\n    formItemProps: {\n      rules: [required()]\n    }\n  },\n  {\n    field: 'platform',\n    label: '展示平台',\n    colProps: {\n      span: 24\n    },\n    component: 'Select',\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    },\n    optionApi: async () => {\n      const dictStore = useDictStore()\n      const dictOptions = await dictStore.getDictObj(['sys_vadmin_platform'])\n      return dictOptions.sys_vadmin_platform\n    },\n    formItemProps: {\n      rules: [required()]\n    }\n  },\n  {\n    field: 'is_active',\n    label: '是否可见',\n    colProps: {\n      span: 24\n    },\n    component: 'RadioGroup',\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      options: [\n        {\n          label: '可见',\n          value: true\n        },\n        {\n          label: '不可见',\n          value: false\n        }\n      ]\n    },\n    value: true,\n    formItemProps: {\n      rules: [required()]\n    }\n  }\n])\n\nconst { formRegister, formMethods } = useForm()\nconst { setValues, getFormData, getElFormExpose } = formMethods\n\nconst submit = async () => {\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validate()\n  if (valid) {\n    const formData = await getFormData()\n    return formData\n  }\n}\n\nwatch(\n  () => props.currentRow,\n  (currentRow) => {\n    if (!currentRow) return\n    setValues(currentRow)\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\ndefineExpose({\n  submit\n})\n</script>\n\n<template>\n  <Form @register=\"formRegister\" :schema=\"formSchema\" />\n</template>\n"],"names":["required","useValidator","props","__props","formSchema","reactive","field","label","component","colProps","span","componentProps","style","width","formItemProps","rules","optionApi","__async","useDictStore","getDictObj","sys_vadmin_platform","options","value","formRegister","formMethods","useForm","setValues","getFormData","getElFormExpose","submit","elForm","validate","watch","currentRow","deep","immediate","__expose"],"mappings":"ogBAOA,KAAM,CAAEA,SAAAA,CAAU,EAAGC,EAAY,EAE3BC,EAAQC,EAORC,EAAaC,EAAuB,CACxC,CACEC,MAAO,OACPC,MAAO,OACPC,UAAW,QACXC,SAAU,CACRC,KAAM,EACP,EACDC,eAAgB,CACdC,MAAO,CACLC,MAAO,MACT,CACD,EACDC,cAAe,CACbC,MAAO,CAACf,GAAU,CACpB,CACF,EACA,CACEM,MAAO,WACPC,MAAO,OACPE,SAAU,CACRC,KAAM,EACP,EACDF,UAAW,SACXG,eAAgB,CACdC,MAAO,CACLC,MAAO,MACT,CACD,EACDG,UAAW,IAAYC,EAAA,sBAGrB,OADoB,MADFC,IACkBC,WAAW,CAAC,qBAAqB,CAAC,GACnDC,mBACpB,GACDN,cAAe,CACbC,MAAO,CAACf,GAAU,CACpB,CACF,EACA,CACEM,MAAO,YACPC,MAAO,OACPE,SAAU,CACRC,KAAM,EACP,EACDF,UAAW,aACXG,eAAgB,CACdC,MAAO,CACLC,MAAO,MACR,EACDQ,QAAS,CACP,CACEd,MAAO,KACPe,MAAO,EACT,EACA,CACEf,MAAO,MACPe,MAAO,GACR,CAEJ,EACDA,MAAO,GACPR,cAAe,CACbC,MAAO,CAACf,GAAU,CACpB,CACD,CAAA,CACF,EAEK,CAAEuB,aAAAA,EAAcC,YAAAA,CAAa,EAAGC,EAAO,EACvC,CAAEC,UAAAA,EAAWC,YAAAA,EAAaC,gBAAAA,CAAiB,EAAGJ,EAE9CK,EAAS,IAAYZ,EAAA,sBACzB,MAAMa,EAAS,MAAMF,IAErB,GADc,MAAME,GAAAA,YAAAA,EAAQC,WAG1B,OADiB,MAAMJ,MAK3BK,OAAAA,EACE,IAAM9B,EAAM+B,WACXA,GAAe,CACTA,GACLP,EAAUO,CAAU,CACtB,EACA,CACEC,KAAM,GACNC,UAAW,EACb,CACF,EAEAC,EAAa,CACXP,OAAAA,CACF,CAAC"}