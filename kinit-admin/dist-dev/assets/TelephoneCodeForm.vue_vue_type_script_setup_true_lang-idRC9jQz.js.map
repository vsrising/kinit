{"version":3,"file":"TelephoneCodeForm.vue_vue_type_script_setup_true_lang-idRC9jQz.js","sources":["../../src/views/Login/components/TelephoneCodeForm.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { Form } from '@/components/Form'\nimport { reactive, ref, watch } from 'vue'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { useForm } from '@/hooks/web/useForm'\nimport { ElInput, FormRules, ElDivider, ElMessage } from 'element-plus'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { FormSchema } from '@/components/Form'\nimport { postSMSCodeApi } from '@/api/login'\nimport { UserLoginType } from '@/api/login/types'\nimport { useAuthStore } from '@/store/modules/auth'\nimport { RouteLocationNormalizedLoaded, useRouter, RouteRecordRaw } from 'vue-router'\nimport { getRoleMenusApi } from '@/api/login'\nimport { usePermissionStore } from '@/store/modules/permission'\nimport { BaseButton } from '@/components/Button'\n\nconst emit = defineEmits(['to-password'])\n\nconst { formRegister, formMethods } = useForm()\nconst { getFormData, getElFormExpose } = formMethods\nconst { t } = useI18n()\nconst { required } = useValidator()\nconst { currentRoute, addRoute, push } = useRouter()\nconst permissionStore = usePermissionStore()\nconst authStore = useAuthStore()\n\nconst schema = reactive<FormSchema[]>([\n  {\n    field: 'title',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return <h2 class=\"text-2xl font-bold text-center w-[100%]\">{t('login.login')}</h2>\n        }\n      }\n    }\n  },\n  {\n    field: 'telephone',\n    label: t('login.telephone'),\n    value: '',\n    component: 'Input',\n    colProps: {\n      span: 24\n    },\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      placeholder: t('login.telephonePlaceholder'),\n      maxlength: 11\n    }\n  },\n  {\n    field: 'password',\n    label: t('login.SMSCode'),\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: (data) => {\n          return (\n            <div class=\"w-[100%] flex\">\n              <ElInput\n                v-model={data['password']}\n                placeholder={t('login.codePlaceholder')}\n                v-slots={{\n                  suffix: () => (\n                    <>\n                      <ElDivider direction=\"vertical\" />\n                      {SMSCodeStatus.value ? (\n                        <BaseButton type=\"primary\" link onClick={getSMSCode}>\n                          {t('login.getSMSCode')}\n                        </BaseButton>\n                      ) : (\n                        <BaseButton type=\"primary\" disabled={!SMSCodeStatus.value} link>\n                          {SMSCodeNumber.value + t('login.SMSCodeRetry')}\n                        </BaseButton>\n                      )}\n                    </>\n                  )\n                }}\n              ></ElInput>\n            </div>\n          )\n        }\n      }\n    }\n  },\n  {\n    field: 'method',\n    label: '登录类型',\n    value: '1',\n    component: 'Input',\n    hidden: true\n  },\n  {\n    field: 'login',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <div class=\"w-[100%]\">\n              <div class=\"w-[100%]\">\n                <BaseButton\n                  type=\"primary\"\n                  class=\"w-[100%]\"\n                  loading={loading.value}\n                  onClick={telephoneCodeLogin}\n                >\n                  {t('login.login')}\n                </BaseButton>\n              </div>\n              <div class=\"w-[100%] mt-15px\">\n                <BaseButton class=\"w-[100%]\" onClick={toPasswordLogin}>\n                  {t('login.passwordLogin')}\n                </BaseButton>\n              </div>\n            </div>\n          )\n        }\n      }\n    }\n  }\n])\n\nconst rules: FormRules = {\n  telephone: [required()],\n  method: [required()],\n  password: [required()]\n}\n\nconst toPasswordLogin = () => {\n  emit('to-password')\n}\n\nconst loading = ref(false)\n\nconst redirect = ref<string>('')\n\nwatch(\n  () => currentRoute.value,\n  (route: RouteLocationNormalizedLoaded) => {\n    redirect.value = route?.query?.redirect as string\n  },\n  {\n    immediate: true\n  }\n)\n\nconst telephoneCodeLogin = async () => {\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validate()\n  if (valid) {\n    loading.value = true\n    const formData: UserLoginType = await getFormData()\n    try {\n      const res = await authStore.login(formData)\n      if (res) {\n        if (!res.data.is_reset_password) {\n          // 重置密码\n          push({ path: '/reset/password' })\n        } else {\n          // 是否使用动态路由\n          getMenu()\n        }\n      } else {\n        loading.value = false\n      }\n    } catch (e: any) {\n      loading.value = false\n    }\n  }\n}\n\nlet SMSCodeStatus = ref(true)\nlet SMSCodeNumber = ref(60)\n\nconst getSMSCode = async () => {\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validateField('telephone')\n  if (valid) {\n    SMSCodeStatus.value = false\n    SMSCodeNumber.value = 60\n    const formData: UserLoginType = await getFormData()\n    try {\n      const res = await postSMSCodeApi({ telephone: formData.telephone })\n      if (res?.data) {\n        let timer = setInterval(() => {\n          SMSCodeNumber.value--\n          if (SMSCodeNumber.value < 1) {\n            SMSCodeStatus.value = true\n            clearInterval(timer)\n          }\n        }, 1000)\n      } else {\n        ElMessage.error('发送失败，请联系管理员')\n        SMSCodeStatus.value = true\n      }\n    } catch (e: any) {\n      SMSCodeStatus.value = true\n    }\n  }\n}\n\n// 获取用户菜单信息\nconst getMenu = async () => {\n  const res = await getRoleMenusApi()\n  if (res) {\n    const routers = res.data || []\n    await permissionStore.generateRoutes(routers).catch(() => {})\n    permissionStore.getAddRouters.forEach((route) => {\n      addRoute(route as RouteRecordRaw) // 动态添加可访问路由表\n    })\n    permissionStore.setIsAddRouters(true)\n    push({ path: redirect.value || permissionStore.addRouters[0].path })\n  }\n}\n</script>\n\n<template>\n  <Form\n    :schema=\"schema\"\n    :rules=\"rules\"\n    label-position=\"top\"\n    hide-required-asterisk\n    size=\"large\"\n    class=\"dark:border-1 dark:border-[var(--el-border-color)] dark:border-solid\"\n    @register=\"formRegister\"\n  />\n</template>\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","emit","__emit","formRegister","formMethods","useForm","getFormData","getElFormExpose","t","useI18n","required","useValidator","currentRoute","addRoute","push","useRouter","permissionStore","usePermissionStore","authStore","useAuthStore","schema","reactive","field","colProps","span","formItemProps","slots","default","_createVNode","label","value","component","componentProps","style","width","placeholder","maxlength","data","ElInput","$event","suffix","_slot","_Fragment","ElDivider","SMSCodeStatus","BaseButton","getSMSCode","SMSCodeNumber","hidden","_slot2","_slot3","loading","telephoneCodeLogin","toPasswordLogin","rules","telephone","method","password","ref","redirect","watch","route","query","immediate","__async","elForm","validate","formData","res","login","is_reset_password","getMenu","path","e","validateField","postSMSCodeApi","timer","setInterval","clearInterval","ElMessage","error","getRoleMenusApi","routers","generateRoutes","catch","getAddRouters","forEach","setIsAddRouters","addRouters"],"mappings":"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"}