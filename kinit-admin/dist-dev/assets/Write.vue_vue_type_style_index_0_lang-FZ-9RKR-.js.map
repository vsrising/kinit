{"version":3,"file":"Write.vue_vue_type_style_index_0_lang-FZ-9RKR-.js","sources":["../../src/views/Vadmin/Resource/Image/components/Write.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { Form, FormSchema } from '@/components/Form'\nimport { useForm } from '@/hooks/web/useForm'\nimport { PropType, reactive, ref, watch } from 'vue'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { ElUpload, ElImageViewer, ElMessage } from 'element-plus'\nimport type {\n  UploadProps,\n  UploadUserFile,\n  UploadRequestOptions,\n  UploadFile,\n  UploadFiles\n} from 'element-plus'\nimport { Icon } from '@/components/Icon'\n\nconst { required } = useValidator()\n\nconst props = defineProps({\n  currentRow: {\n    type: Object as PropType<any>,\n    default: () => null\n  }\n})\n\nconst formSchema = reactive<FormSchema[]>([\n  {\n    field: 'upload_method',\n    label: '上传方式',\n    colProps: {\n      span: 24\n    },\n    component: 'RadioGroup',\n    componentProps: {\n      options: [\n        {\n          label: '同时上传',\n          value: '1'\n        },\n        {\n          label: '按顺序上传',\n          value: '2'\n        }\n      ]\n    },\n    value: '1',\n    formItemProps: {\n      rules: [required()]\n    }\n  },\n  {\n    field: 'images',\n    label: '',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      rules: [required()],\n      slots: {\n        default: () => {\n          return (\n            <>\n              <div class=\"flex justify-between w-[100%]\">\n                <span>图片资源</span>\n                <span>\n                  最大数量限制：{fileList.value.length}/{maxLimit.value}\n                </span>\n              </div>\n              <ElUpload\n                class=\"resource-image-uploader\"\n                action=\"#\"\n                http-request={handleHttpRequest}\n                v-model:file-list={fileList.value}\n                show-file-list={true}\n                multiple={true}\n                before-upload={beforeImageUpload}\n                on-success={handleUploadSuccess}\n                on-preview={handlePictureCardPreview}\n                on-exceed={handleExceedLimit}\n                accept=\"image/jpeg,image/png\"\n                name=\"file\"\n                list-type=\"picture-card\"\n                limit={maxLimit.value}\n                drag={true}\n                disabled={maxLimit.value <= fileList.value.length}\n              >\n                {fileList.value.length < maxLimit.value ? (\n                  <div class=\"resource-image-uploader-icon\">\n                    <Icon icon=\"akar-icons:plus\" size={23} />\n                    <span class=\"text-[12px]\">点击或拖拽到这里</span>\n                    <span class=\"text-[12px]\">\n                      {fileList.value.length}/{maxLimit.value}\n                    </span>\n                  </div>\n                ) : (\n                  <div class=\"resource-image-uploader-icon\">\n                    <span class=\"text-[12px]\">已到最大限制</span>\n                    <span class=\"text-[12px]\">\n                      {fileList.value.length}/{maxLimit.value}\n                    </span>\n                  </div>\n                )}\n              </ElUpload>\n            </>\n          )\n        }\n      }\n    }\n  }\n])\n\nconst { formRegister, formMethods } = useForm()\nconst { setValues, getFormData, getElFormExpose, setValue } = formMethods\n\nconst dialogVisible = ref(false)\nconst imgIndex = ref(0)\nconst maxLimit = ref(50)\nconst fileList = ref<UploadUserFile[]>([])\n\nconst beforeImageUpload: UploadProps['beforeUpload'] = (rawFile) => {\n  const isIMAGE = ['image/jpeg', 'image/gif', 'image/png'].includes(rawFile.type)\n  const isLtSize = rawFile.size / 1024 / 1024 < 3\n\n  if (!isIMAGE) {\n    ElMessage.error('上传图片素材必须是 JPG/PNG/ 格式!')\n  }\n  if (!isLtSize) {\n    ElMessage.error('上传图片素材大小不能超过 3MB!')\n  }\n\n  return isIMAGE && isLtSize\n}\n\n// 上传成功的钩子函数\nconst handleUploadSuccess: UploadProps['onSuccess'] = (\n  response: any,\n  uploadFile: UploadFile,\n  uploadFiles: UploadFiles\n) => {\n  fileList.value = uploadFiles\n  setValue('images', uploadFiles)\n}\n\n// 自定义上传\nconst handleHttpRequest: UploadProps['httpRequest'] = (options: UploadRequestOptions) => {\n  return new Promise((resolve) => {\n    resolve(options)\n  })\n}\n\nconst handlePictureCardPreview: UploadProps['onPreview'] = (uploadFile: UploadFile) => {\n  imgIndex.value = fileList.value.findIndex((item) => item.uid === uploadFile.uid)\n  dialogVisible.value = true\n}\n\nconst handleCloseViewer = () => {\n  dialogVisible.value = false\n}\n\nconst handleExceedLimit = () => {\n  ElMessage.error('上传失败，超出图片最大数量限制!')\n}\n\nconst submit = async () => {\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validate()\n  if (valid) {\n    const formData = await getFormData()\n    return formData\n  }\n}\n\nwatch(\n  () => props.currentRow,\n  (currentRow) => {\n    if (!currentRow) return\n    setValues(currentRow)\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\ndefineExpose({\n  submit\n})\n</script>\n\n<template>\n  <Form @register=\"formRegister\" :schema=\"formSchema\" />\n\n  <ElImageViewer\n    v-if=\"dialogVisible\"\n    :z-index=\"9999\"\n    @close=\"handleCloseViewer\"\n    :url-list=\"fileList.map((item) => item.url as string)\"\n    :initial-index=\"imgIndex\"\n  />\n</template>\n\n<style lang=\"less\">\n.resource-image-uploader .el-upload {\n  border: 1px dashed var(--el-border-color);\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  transition: var(--el-transition-duration-fast);\n\n  .el-upload-dragger {\n    padding: 0;\n  }\n\n  .resource-image-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 148px;\n    height: 148px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n  }\n}\n\n.resource-image-uploader .el-upload:hover {\n  border-color: var(--el-color-primary);\n}\n</style>\n"],"names":["required","useValidator","props","__props","formSchema","reactive","field","label","colProps","span","component","componentProps","options","value","formItemProps","rules","slots","default","_createVNode2","_Fragment2","_createTextVNode","fileList","length","maxLimit","ElUpload","handleHttpRequest","$event","beforeImageUpload","handleUploadSuccess","handlePictureCardPreview","handleExceedLimit","Icon","formRegister","formMethods","useForm","setValues","getFormData","getElFormExpose","setValue","dialogVisible","ref","imgIndex","rawFile","isIMAGE","includes","type","isLtSize","size","ElMessage","error","response","uploadFile","uploadFiles","Promise","resolve","findIndex","item","uid","handleCloseViewer","submit","__async","elForm","validate","watch","currentRow","deep","immediate","__expose"],"mappings":"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"}