{"version":3,"file":"Task-dEcROHri.js","sources":["../../src/views/Vadmin/System/Task/Task.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { reactive, ref, unref } from 'vue'\nimport {\n  getTaskListApi,\n  addTaskListApi,\n  delTaskListApi,\n  putTaskListApi,\n  getTaskApi,\n  runOnceTaskApi\n} from '@/api/vadmin/system/task'\nimport { useTable } from '@/hooks/web/useTable'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { Table, TableColumn } from '@/components/Table'\nimport { ElMessage, ElSwitch, ElRow, ElCol, ElMessageBox } from 'element-plus'\nimport { Search } from '@/components/Search'\nimport { FormSchema } from '@/components/Form'\nimport { ContentWrap } from '@/components/ContentWrap'\nimport Write from './components/Write.vue'\nimport { Dialog } from '@/components/Dialog'\nimport { useRouter } from 'vue-router'\nimport CronExpression from './components/CronExpression.vue'\nimport { BaseButton } from '@/components/Button'\n\ndefineOptions({\n  name: 'SystemTask'\n})\n\nconst { push } = useRouter()\nconst { t } = useI18n()\n\nconst { tableRegister, tableState, tableMethods } = useTable({\n  fetchDataApi: async () => {\n    const { pageSize, currentPage } = tableState\n    const res = await getTaskListApi({\n      page: unref(currentPage),\n      limit: unref(pageSize),\n      ...unref(searchParams)\n    })\n    return {\n      list: res.data || [],\n      total: res.count || 0\n    }\n  },\n  fetchDelApi: async (value) => {\n    const res = await delTaskListApi(value as string)\n    return res.code === 200\n  }\n})\n\nconst { dataList, loading, total, pageSize, currentPage } = tableState\nconst { getList, delList } = tableMethods\n\nconst tableColumns = reactive<TableColumn[]>([\n  {\n    field: '_id',\n    label: '任务编号',\n    show: true,\n    disabled: true,\n    width: '230px',\n    span: 24\n  },\n  {\n    field: 'name',\n    label: '任务名称',\n    show: true,\n    disabled: true,\n    span: 24\n  },\n  {\n    field: 'group',\n    label: '任务分组',\n    show: true,\n    span: 24\n  },\n  {\n    field: 'job_class',\n    label: '调用目标',\n    show: true,\n    span: 24\n  },\n  {\n    field: 'exec_strategy',\n    label: '执行策略',\n    show: true,\n    colProps: {\n      span: 24\n    },\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    }\n  },\n  {\n    field: 'expression',\n    label: '表达式',\n    show: true,\n    span: 24\n  },\n  {\n    field: 'is_active',\n    label: '任务状态',\n    show: true,\n    width: '100px',\n    slots: {\n      default: (data: any) => {\n        const row = data.row\n        return (\n          <>\n            <ElSwitch modelValue={row.is_active} disabled />\n          </>\n        )\n      }\n    }\n  },\n  {\n    field: 'last_run_datetime',\n    label: '最近一次执行时间',\n    show: true,\n    width: '180px',\n    span: 24\n  },\n  {\n    field: 'remark',\n    label: '任务备注',\n    show: true,\n    span: 24\n  },\n  {\n    field: 'create_datetime',\n    label: '创建时间',\n    show: true,\n    width: '180px',\n    span: 24\n  },\n  {\n    field: 'action',\n    label: '操作',\n    show: true,\n    disabled: false,\n    width: '240px',\n    slots: {\n      default: (data: any) => {\n        const row = data.row\n        return (\n          <>\n            <BaseButton type=\"primary\" link size=\"small\" onClick={() => editAction(row)}>\n              编辑\n            </BaseButton>\n            <BaseButton type=\"primary\" link size=\"small\" onClick={() => toRecord(row)}>\n              调度日志\n            </BaseButton>\n            <BaseButton type=\"primary\" link size=\"small\" onClick={() => runOnceTask(row)}>\n              执行一次\n            </BaseButton>\n            <BaseButton type=\"danger\" link size=\"small\" onClick={() => delData(row)}>\n              删除\n            </BaseButton>\n          </>\n        )\n      }\n    }\n  }\n])\n\nconst searchSchema = reactive<FormSchema[]>([\n  {\n    field: 'name',\n    label: '任务名称',\n    component: 'Input',\n    componentProps: {\n      clearable: true,\n      style: {\n        width: '214px'\n      }\n    }\n  },\n  {\n    field: '_id',\n    label: '任务编号',\n    component: 'Input',\n    componentProps: {\n      clearable: true,\n      style: {\n        width: '214px'\n      }\n    }\n  },\n  {\n    field: 'group',\n    label: '任务分组',\n    component: 'Select',\n    componentProps: {\n      style: {\n        width: '214px'\n      },\n      options: []\n    }\n  }\n])\n\nconst searchParams = ref({})\nconst setSearchParams = (data: any) => {\n  currentPage.value = 1\n  searchParams.value = data\n  getList()\n}\n\nconst delLoading = ref(false)\n\nconst delData = async (row: any) => {\n  delLoading.value = true\n  await delList(true, [row._id]).finally(() => {\n    delLoading.value = false\n  })\n}\n\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\n\nconst currentRow = ref()\nconst actionType = ref('')\n\nconst writeRef = ref<ComponentRef<typeof Write>>()\n\nconst saveLoading = ref(false)\n\nconst editAction = async (row: any) => {\n  const res = await getTaskApi(row._id)\n  if (res) {\n    dialogTitle.value = '编辑定时任务'\n    actionType.value = 'edit'\n    currentRow.value = res.data\n    dialogVisible.value = true\n  }\n}\n\nconst addAction = () => {\n  dialogTitle.value = '新增定时任务'\n  actionType.value = 'add'\n  currentRow.value = undefined\n  dialogVisible.value = true\n}\n\nconst save = async () => {\n  const write = unref(writeRef)\n  const formData = await write?.submit()\n  if (formData) {\n    saveLoading.value = true\n    try {\n      const res = ref({})\n      if (actionType.value === 'add') {\n        res.value = await addTaskListApi(formData)\n        if (res.value) {\n          dialogVisible.value = false\n          getList()\n        }\n      } else if (actionType.value === 'edit') {\n        res.value = await putTaskListApi(formData._id, formData)\n        if (res.value) {\n          dialogVisible.value = false\n          getList()\n        }\n      }\n    } finally {\n      saveLoading.value = false\n    }\n  }\n}\n\n// 生成 cron 表达式\nconst generateCronExpression = () => {\n  dialogTitle.value = 'Cron 表达式'\n  actionType.value = 'expression'\n  currentRow.value = undefined\n  dialogVisible.value = true\n}\n\n// 跳转到调度日志页面\nconst toRecord = (row: any) => {\n  if (row) {\n    push(`/record/task?job_id=${row._id}`)\n  } else {\n    push(`/record/task`)\n  }\n}\n\n// 执行一次任务\nconst runOnceTask = async (row: any) => {\n  ElMessageBox.confirm('是否确认立即执行一次任务', '提示', {\n    confirmButtonText: t('common.delOk'),\n    cancelButtonText: t('common.delCancel'),\n    type: 'warning'\n  }).then(async () => {\n    const res = await runOnceTaskApi(row._id)\n    if (res) {\n      if (res.data > 0) {\n        ElMessage.success('任务成功被消费者接收！')\n      } else {\n        ElMessage.error('执行失败，未有消费者接收任务，请检查定时任务程序状态！')\n      }\n    }\n  })\n}\n</script>\n\n<template>\n  <ContentWrap>\n    <Search :schema=\"searchSchema\" @reset=\"setSearchParams\" @search=\"setSearchParams\" />\n    <Table\n      v-model:current-page=\"currentPage\"\n      v-model:page-size=\"pageSize\"\n      showAction\n      :columns=\"tableColumns\"\n      default-expand-all\n      node-key=\"id\"\n      :data=\"dataList\"\n      :loading=\"loading\"\n      :pagination=\"{\n        total\n      }\"\n      @register=\"tableRegister\"\n      @refresh=\"getList\"\n    >\n      <template #toolbar>\n        <ElRow :gutter=\"10\">\n          <ElCol :span=\"1.5\">\n            <BaseButton type=\"primary\" @click=\"addAction\">新增定时任务</BaseButton>\n          </ElCol>\n          <ElCol :span=\"1.5\">\n            <BaseButton type=\"primary\" @click=\"toRecord(null)\">调度日志</BaseButton>\n          </ElCol>\n          <ElCol :span=\"1.5\">\n            <BaseButton type=\"primary\" @click=\"generateCronExpression\"\n              >快速生成 Cron 表达式</BaseButton\n            >\n          </ElCol>\n        </ElRow>\n      </template>\n    </Table>\n  </ContentWrap>\n\n  <Dialog v-model=\"dialogVisible\" :title=\"dialogTitle\" :height=\"680\" :width=\"850\">\n    <Write\n      v-if=\"actionType === 'add' || actionType === 'edit'\"\n      ref=\"writeRef\"\n      :current-row=\"currentRow\"\n    />\n\n    <CronExpression v-if=\"actionType === 'expression'\" />\n\n    <template #footer>\n      <BaseButton type=\"primary\" :loading=\"saveLoading\" @click=\"save\">\n        {{ t('exampleDemo.save') }}\n      </BaseButton>\n      <BaseButton @click=\"dialogVisible = false\">{{ t('dialogDemo.close') }}</BaseButton>\n    </template>\n  </Dialog>\n</template>\n"],"names":["push","useRouter","t","useI18n","tableRegister","tableState","tableMethods","useTable","fetchDataApi","__async","pageSize","currentPage","res","getTaskListApi","__spreadValues","page","unref","limit","searchParams","list","data","total","count","fetchDelApi","value","delTaskListApi","code","dataList","loading","getList","delList","tableColumns","reactive","field","label","show","disabled","width","span","colProps","componentProps","style","slots","default","row","_createVNode2","_Fragment2","ElSwitch","is_active","BaseButton","onClick","editAction","_createTextVNode2","toRecord","runOnceTask","delData","searchSchema","component","clearable","options","ref","setSearchParams","delLoading","_id","finally","dialogVisible","dialogTitle","currentRow","actionType","writeRef","saveLoading","getTaskApi","addAction","undefined","save","write","formData","submit","addTaskListApi","putTaskListApi","generateCronExpression","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","then","runOnceTaskApi","ElMessage","success","error"],"mappings":"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"}