{"version":3,"file":"Detail.vue_vue_type_script_setup_true_lang-4H061Dhr.js","sources":["../../src/views/Vadmin/System/Record/Task/components/Detail.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { PropType, reactive, ref } from 'vue'\nimport { Descriptions, DescriptionsSchema } from '@/components/Descriptions'\nimport { selectDictLabel, DictDetail } from '@/utils/dict'\nimport { useDictStore } from '@/store/modules/dict'\nimport 'vue3-json-viewer/dist/index.css'\n\ndefineProps({\n  currentRow: {\n    type: Object as PropType<Nullable<any>>,\n    default: () => null\n  }\n})\n\nconst execStrategyOptions = ref<DictDetail[]>([])\n\nconst getOptions = async () => {\n  const dictStore = useDictStore()\n  const dictOptions = await dictStore.getDictObj(['vadmin_system_task_exec_strategy'])\n  execStrategyOptions.value = dictOptions.vadmin_system_task_exec_strategy\n}\n\ngetOptions()\n\nconst detailSchema = reactive<DescriptionsSchema[]>([\n  {\n    field: 'job_id',\n    label: '任务编号',\n    width: '240px',\n    span: 24\n  },\n  {\n    field: 'name',\n    label: '任务名称',\n    span: 24\n  },\n  {\n    field: 'group',\n    label: '任务分组',\n    span: 24\n  },\n  {\n    field: 'job_class',\n    label: '调用目标',\n    span: 24\n  },\n  {\n    field: 'exec_strategy',\n    label: '执行策略',\n    span: 24,\n    slots: {\n      default: (data: any) => {\n        const row = data\n        return (\n          <>\n            <div>{selectDictLabel(execStrategyOptions.value, row.exec_strategy)}</div>\n          </>\n        )\n      }\n    }\n  },\n  {\n    field: 'expression',\n    label: '表达式',\n    span: 24\n  },\n  {\n    field: 'start_time',\n    label: '开始执行时间',\n    width: '200px',\n    span: 24\n  },\n  {\n    field: 'end_time',\n    label: '执行完成时间',\n    width: '200px',\n    span: 24\n  },\n  {\n    field: 'process_time',\n    label: '耗时(秒)',\n    width: '110px',\n    span: 24\n  },\n  {\n    field: 'retval',\n    label: '任务返回值',\n    span: 24,\n    slots: {\n      default: (data: any) => {\n        const row = data\n        return JSON.parse(row.retval)\n      }\n    }\n  },\n  {\n    field: 'exception',\n    label: '异常信息',\n    span: 24\n  },\n  {\n    field: 'traceback',\n    label: '堆栈跟踪',\n    width: '100px',\n    span: 24\n  }\n])\n</script>\n\n<template>\n  <Descriptions :schema=\"detailSchema\" :data=\"currentRow || {}\" />\n</template>\n"],"names":["execStrategyOptions","ref","__async","dictOptions","useDictStore","getDictObj","value","vadmin_system_task_exec_strategy","detailSchema","reactive","field","label","width","span","slots","default","data","row","_createVNode","_Fragment","selectDictLabel","exec_strategy","JSON","parse","retval"],"mappings":"0hBAcA,MAAMA,EAAsBC,EAAkB,CAAA,CAAE,EAEjBC,EAAA,sBAE7B,MAAMC,EAAc,MADFC,IACkBC,WAAW,CAAC,kCAAkC,CAAC,EACnFL,EAAoBM,MAAQH,EAAYI,mCAK1C,MAAMC,EAAeC,EAA+B,CAClD,CACEC,MAAO,SACPC,MAAO,OACPC,MAAO,QACPC,KAAM,EACR,EACA,CACEH,MAAO,OACPC,MAAO,OACPE,KAAM,EACR,EACA,CACEH,MAAO,QACPC,MAAO,OACPE,KAAM,EACR,EACA,CACEH,MAAO,YACPC,MAAO,OACPE,KAAM,EACR,EACA,CACEH,MAAO,gBACPC,MAAO,OACPE,KAAM,GACNC,MAAO,CACLC,QAAUC,GAAc,CACtB,MAAMC,EAAMD,EACZ,OAAAE,EAAAC,EAAA,KAAA,CAAAD,EAEUE,MAAAA,KAAAA,CAAAA,EAAgBpB,EAAoBM,MAAOW,EAAII,aAAa,CAAC,CAAA,CAAA,CAAA,CAGzE,CACF,CACF,EACA,CACEX,MAAO,aACPC,MAAO,MACPE,KAAM,EACR,EACA,CACEH,MAAO,aACPC,MAAO,SACPC,MAAO,QACPC,KAAM,EACR,EACA,CACEH,MAAO,WACPC,MAAO,SACPC,MAAO,QACPC,KAAM,EACR,EACA,CACEH,MAAO,eACPC,MAAO,QACPC,MAAO,QACPC,KAAM,EACR,EACA,CACEH,MAAO,SACPC,MAAO,QACPE,KAAM,GACNC,MAAO,CACLC,QAAUC,GAEDM,KAAKC,MADAP,EACUQ,MAAM,CAEhC,CACF,EACA,CACEd,MAAO,YACPC,MAAO,OACPE,KAAM,EACR,EACA,CACEH,MAAO,YACPC,MAAO,OACPC,MAAO,QACPC,KAAM,EACP,CAAA,CACF"}