{"version":3,"file":"DictDetail.vue_vue_type_script_setup_true_lang-8d9D1e7q.js","sources":["../../src/views/Vadmin/System/Dict/Detail/DictDetail.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { reactive, ref, unref, watch } from 'vue'\nimport {\n  getDictDetailsListApi,\n  addDictDetailsListApi,\n  delDictDetailsListApi,\n  putDictDetailsListApi,\n  getDictDetailsApi\n} from '@/api/vadmin/system/dict'\nimport { useTable } from '@/hooks/web/useTable'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { Table, TableColumn } from '@/components/Table'\nimport { ElSwitch, ElRow, ElCol } from 'element-plus'\nimport { Search } from '@/components/Search'\nimport { FormSchema } from '@/components/Form'\nimport { ContentWrap } from '@/components/ContentWrap'\nimport Write from './components/Write.vue'\nimport { Dialog } from '@/components/Dialog'\nimport { propTypes } from '@/utils/propTypes'\nimport { BaseButton } from '@/components/Button'\n\nconst props = defineProps({\n  dictTypeId: propTypes.number.def(undefined)\n})\n\nconst { t } = useI18n()\n\nconst { tableRegister, tableState, tableMethods } = useTable({\n  fetchDataApi: async () => {\n    const { pageSize, currentPage } = tableState\n    const res = await getDictDetailsListApi({\n      page: unref(currentPage),\n      limit: unref(pageSize),\n      dict_type_id: props.dictTypeId,\n      ...unref(searchParams)\n    })\n    return {\n      list: res.data || [],\n      total: res.count || 0\n    }\n  },\n  fetchDelApi: async (value) => {\n    const res = await delDictDetailsListApi(value)\n    return res.code === 200\n  }\n})\n\nconst { dataList, loading, total, pageSize, currentPage } = tableState\nconst { getList, delList } = tableMethods\n\nconst tableColumns = reactive<TableColumn[]>([\n  {\n    field: 'id',\n    label: '字典编号',\n    show: false,\n    disabled: false\n  },\n  {\n    field: 'label',\n    label: '字典标签',\n    show: true,\n    disabled: true\n  },\n  {\n    field: 'value',\n    label: '字典键值',\n    show: true\n  },\n  {\n    field: 'order',\n    label: '字典排序',\n    show: true\n  },\n  {\n    field: 'disabled',\n    label: '是否禁用',\n    show: true,\n    slots: {\n      default: (data: any) => {\n        const row = data.row\n        return (\n          <>\n            <ElSwitch modelValue={!row.disabled} disabled />\n          </>\n        )\n      }\n    }\n  },\n  {\n    field: 'remark',\n    label: '备注',\n    show: false\n  },\n  {\n    field: 'create_datetime',\n    label: '创建时间',\n    show: false\n  },\n  {\n    field: 'action',\n    width: '120px',\n    label: '操作',\n    show: true,\n    slots: {\n      default: (data: any) => {\n        const row = data.row\n        return (\n          <>\n            <BaseButton type=\"primary\" link size=\"small\" onClick={() => editAction(row)}>\n              编辑\n            </BaseButton>\n            <BaseButton\n              type=\"danger\"\n              loading={delLoading.value}\n              link\n              size=\"small\"\n              onClick={() => delData(row)}\n            >\n              删除\n            </BaseButton>\n          </>\n        )\n      }\n    }\n  }\n])\n\nconst searchSchema = reactive<FormSchema[]>([\n  {\n    field: 'label',\n    label: '字典标签',\n    component: 'Input',\n    componentProps: {\n      clearable: false\n    }\n  }\n])\n\nconst searchParams = ref({})\nconst setSearchParams = (data: any) => {\n  currentPage.value = 1\n  searchParams.value = data\n  getList()\n}\n\nconst delLoading = ref(false)\n\nconst delData = async (row: any) => {\n  delLoading.value = true\n  await delList(true, [row.id]).finally(() => {\n    delLoading.value = false\n  })\n}\n\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\n\nconst currentRow = ref()\nconst actionType = ref('')\n\nconst writeRef = ref<ComponentRef<typeof Write>>()\n\nconst saveLoading = ref(false)\n\nconst editAction = async (row: any) => {\n  const res = await getDictDetailsApi(row.id)\n  if (res) {\n    dialogTitle.value = '编辑字段元素'\n    actionType.value = 'edit'\n    currentRow.value = res.data\n    dialogVisible.value = true\n  }\n}\n\nconst addAction = () => {\n  dialogTitle.value = '新增字段元素'\n  actionType.value = 'add'\n  currentRow.value = undefined\n  dialogVisible.value = true\n}\n\nconst save = async () => {\n  const write = unref(writeRef)\n  const formData = await write?.submit()\n  if (formData) {\n    saveLoading.value = true\n    try {\n      const res = ref({})\n      if (actionType.value === 'add') {\n        res.value = await addDictDetailsListApi(formData)\n        if (res.value) {\n          dialogVisible.value = false\n          getList()\n        }\n      } else if (actionType.value === 'edit') {\n        res.value = await putDictDetailsListApi(formData)\n        if (res.value) {\n          dialogVisible.value = false\n          getList()\n        }\n      }\n    } finally {\n      saveLoading.value = false\n    }\n  }\n}\n\nwatch(\n  () => props.dictTypeId,\n  () => {\n    getList()\n  },\n  {\n    deep: true\n  }\n)\n</script>\n\n<template>\n  <ContentWrap>\n    <Search :schema=\"searchSchema\" @reset=\"setSearchParams\" @search=\"setSearchParams\" />\n    <Table\n      v-model:current-page=\"currentPage\"\n      v-model:page-size=\"pageSize\"\n      showAction\n      activeUID=\"detail\"\n      :columns=\"tableColumns\"\n      default-expand-all\n      node-key=\"id\"\n      :data=\"dataList\"\n      :loading=\"loading\"\n      :pagination=\"{\n        total\n      }\"\n      @register=\"tableRegister\"\n      @refresh=\"getList\"\n    >\n      <template #toolbar>\n        <ElRow :gutter=\"10\">\n          <ElCol :span=\"1.5\">\n            <BaseButton type=\"primary\" @click=\"addAction\">新增字典元素</BaseButton>\n          </ElCol>\n        </ElRow>\n      </template>\n    </Table>\n  </ContentWrap>\n\n  <Dialog v-model=\"dialogVisible\" :title=\"dialogTitle\" :height=\"650\">\n    <Write ref=\"writeRef\" :current-row=\"currentRow\" :dict-type-id=\"dictTypeId\" />\n\n    <template #footer>\n      <BaseButton type=\"primary\" :loading=\"saveLoading\" @click=\"save\">\n        {{ t('exampleDemo.save') }}\n      </BaseButton>\n      <BaseButton @click=\"dialogVisible = false\">{{ t('dialogDemo.close') }}</BaseButton>\n    </template>\n  </Dialog>\n</template>\n"],"names":["props","__props","t","useI18n","tableRegister","tableState","tableMethods","useTable","fetchDataApi","__async","pageSize","currentPage","res","getDictDetailsListApi","__spreadValues","page","unref","limit","dict_type_id","dictTypeId","searchParams","list","data","total","count","fetchDelApi","value","delDictDetailsListApi","code","dataList","loading","getList","delList","tableColumns","reactive","field","label","show","disabled","slots","default","row","_createVNode2","_Fragment2","ElSwitch","width","BaseButton","onClick","editAction","_createTextVNode2","delLoading","delData","searchSchema","component","componentProps","clearable","ref","setSearchParams","id","finally","dialogVisible","dialogTitle","currentRow","actionType","writeRef","saveLoading","getDictDetailsApi","addAction","undefined","save","write","formData","submit","addDictDetailsListApi","putDictDetailsListApi","watch","deep"],"mappings":"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"}