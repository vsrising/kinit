{"version":3,"file":"LoginForm.vue_vue_type_script_setup_true_lang-rpZd9lAh.js","sources":["../../src/views/Login/components/LoginForm.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { reactive, ref, watch } from 'vue'\nimport { Form } from '@/components/Form'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { ElCheckbox, ElLink } from 'element-plus'\nimport { useForm } from '@/hooks/web/useForm'\nimport { getRoleMenusApi } from '@/api/login'\nimport { useAuthStore } from '@/store/modules/auth'\nimport { usePermissionStore } from '@/store/modules/permission'\nimport { useRouter } from 'vue-router'\nimport type { RouteLocationNormalizedLoaded, RouteRecordRaw } from 'vue-router'\nimport { UserLoginType } from '@/api/login/types'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { FormSchema } from '@/components/Form'\nimport { Icon } from '@/components/Icon'\nimport { BaseButton } from '@/components/Button'\n\nconst emit = defineEmits(['to-telephone'])\n\nconst { required } = useValidator()\n\nconst permissionStore = usePermissionStore()\n\nconst authStore = useAuthStore()\n\nconst { currentRoute, addRoute, push } = useRouter()\n\nconst { t } = useI18n()\n\nconst remember = ref(false)\nconst hoverColor = 'var(--el-color-primary)'\n\nconst rules = {\n  telephone: [required()],\n  method: [required()],\n  password: [required()]\n}\n\nconst schema = reactive<FormSchema[]>([\n  {\n    field: 'title',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return <h2 class=\"text-2xl font-bold text-center w-[100%]\">{t('login.login')}</h2>\n        }\n      }\n    }\n  },\n  {\n    field: 'telephone',\n    label: t('login.telephone'),\n    value: '15020221010',\n    component: 'Input',\n    colProps: {\n      span: 24\n    },\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      placeholder: t('login.telephonePlaceholder'),\n      maxlength: 11\n    }\n  },\n  {\n    field: 'password',\n    label: t('login.password'),\n    value: 'kinit2022',\n    component: 'InputPassword',\n    colProps: {\n      span: 24\n    },\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      placeholder: t('login.passwordPlaceholder')\n    }\n  },\n  {\n    field: 'method',\n    label: '登录类型',\n    value: '0',\n    component: 'Input',\n    hidden: true\n  },\n  {\n    field: 'tool',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <>\n              <div class=\"flex justify-between items-center w-[100%]\">\n                <ElCheckbox v-model={remember.value} label={t('login.remember')} size=\"small\" />\n                <ElLink type=\"primary\" underline={false}>\n                  {t('login.forgetPassword')}\n                </ElLink>\n              </div>\n            </>\n          )\n        }\n      }\n    }\n  },\n  {\n    field: 'login',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <>\n              <div class=\"w-[100%]\">\n                <BaseButton\n                  loading={loading.value}\n                  type=\"primary\"\n                  class=\"w-[100%]\"\n                  onClick={signIn}\n                >\n                  {t('login.login')}\n                </BaseButton>\n              </div>\n              <div class=\"w-[100%] mt-15px\">\n                <BaseButton class=\"w-[100%]\" onClick={toTelephoneLogin}>\n                  {t('login.smsLogin')}\n                </BaseButton>\n              </div>\n            </>\n          )\n        }\n      }\n    }\n  },\n  {\n    field: 'other',\n    component: 'Divider',\n    label: t('login.otherLogin'),\n    componentProps: {\n      contentPosition: 'center'\n    }\n  },\n  {\n    field: 'otherIcon',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <>\n              <div class=\"flex justify-between w-[100%]\">\n                <Icon\n                  icon=\"ant-design:github-filled\"\n                  size={iconSize}\n                  class=\"cursor-pointer ant-icon\"\n                  color={iconColor}\n                  hoverColor={hoverColor}\n                />\n                <Icon\n                  icon=\"ant-design:wechat-filled\"\n                  size={iconSize}\n                  class=\"cursor-pointer ant-icon\"\n                  color={iconColor}\n                  hoverColor={hoverColor}\n                />\n                <Icon\n                  icon=\"ant-design:alipay-circle-filled\"\n                  size={iconSize}\n                  color={iconColor}\n                  hoverColor={hoverColor}\n                  class=\"cursor-pointer ant-icon\"\n                />\n                <Icon\n                  icon=\"ant-design:weibo-circle-filled\"\n                  size={iconSize}\n                  color={iconColor}\n                  hoverColor={hoverColor}\n                  class=\"cursor-pointer ant-icon\"\n                />\n              </div>\n            </>\n          )\n        }\n      }\n    }\n  }\n])\n\nconst iconSize = 30\nconst { formRegister, formMethods } = useForm()\nconst { getFormData, getElFormExpose } = formMethods\nconst loading = ref(false)\nconst iconColor = '#999'\nconst redirect = ref<string>('')\n\nwatch(\n  () => currentRoute.value,\n  (route: RouteLocationNormalizedLoaded) => {\n    redirect.value = route?.query?.redirect as string\n  },\n  {\n    immediate: true\n  }\n)\n\n// 登录\nconst signIn = async () => {\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validate()\n  if (valid) {\n    loading.value = true\n    const formData: UserLoginType = await getFormData()\n    try {\n      const res = await authStore.login(formData)\n      if (res) {\n        if (!res.data.is_reset_password) {\n          // 重置密码\n          push({ path: '/reset/password' })\n        } else {\n          // 获取动态路由\n          getMenu()\n        }\n      } else {\n        loading.value = false\n      }\n    } catch (e: any) {\n      loading.value = false\n    }\n  }\n}\n\n// 获取用户菜单信息\nconst getMenu = async () => {\n  const res = await getRoleMenusApi()\n  if (res) {\n    const routers = res.data || []\n    await permissionStore.generateRoutes(routers).catch(() => {})\n    permissionStore.getAddRouters.forEach((route) => {\n      addRoute(route as RouteRecordRaw) // 动态添加可访问路由表\n    })\n    permissionStore.setIsAddRouters(true)\n    push({ path: redirect.value || permissionStore.addRouters[0].path })\n  }\n}\n\n// 手机验证码登录\nconst toTelephoneLogin = () => {\n  emit('to-telephone')\n}\n</script>\n\n<template>\n  <Form\n    :schema=\"schema\"\n    :rules=\"rules\"\n    label-position=\"top\"\n    hide-required-asterisk\n    size=\"large\"\n    class=\"dark:border-1 dark:border-[var(--el-border-color)] dark:border-solid\"\n    @register=\"formRegister\"\n  />\n</template>\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","hoverColor","iconSize","iconColor","emit","__emit","required","useValidator","permissionStore","usePermissionStore","authStore","useAuthStore","currentRoute","addRoute","push","useRouter","t","useI18n","remember","ref","rules","telephone","method","password","schema","reactive","field","colProps","span","formItemProps","slots","default","_createVNode","label","value","component","componentProps","style","width","placeholder","maxlength","hidden","_slot","_Fragment","ElCheckbox","$event","ElLink","_slot2","_slot3","BaseButton","loading","signIn","toTelephoneLogin","contentPosition","Icon","formRegister","formMethods","useForm","getFormData","getElFormExpose","redirect","watch","route","query","immediate","__async","elForm","validate","formData","res","login","data","is_reset_password","getMenu","path","e","getRoleMenusApi","routers","generateRoutes","catch","getAddRouters","forEach","setIsAddRouters","addRouters"],"mappings":"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"}