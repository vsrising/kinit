{"version":3,"file":"dict-5fAUqSge.js","sources":["../../src/store/modules/dict.ts"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { store } from '../index'\nimport { getDictTypeDetailsApi } from '@/api/vadmin/system/dict'\n\nexport interface DictState {\n  dictObj: Recordable\n}\n\nexport const useDictStore = defineStore('dict', {\n  state: (): DictState => ({\n    dictObj: {}\n  }),\n  getters: {\n    getDictObjData(): Recordable {\n      return this.dictObj\n    }\n  },\n  actions: {\n    async getDictObj(dictTypes: string[]) {\n      const result: Recordable = {}\n      const addList: string[] = []\n      for (const item of dictTypes) {\n        if (item in this.dictObj) {\n          result[item] = this.dictObj[item]\n        } else {\n          result[item] = []\n          addList.push(item)\n        }\n      }\n      if (addList.length > 0) {\n        const res = await getDictTypeDetailsApi(addList)\n        if (res) {\n          for (const item of addList) {\n            result[item] = res.data[item]\n            this.dictObj[item] = res.data[item]\n          }\n        }\n      }\n      return result\n    }\n  },\n  persist: true\n})\n\nexport const useDictStoreWithOut = () => {\n  return useDictStore(store)\n}\n"],"names":["useDictStore","defineStore","dictTypes","__async","result","addList","item","res","getDictTypeDetailsApi"],"mappings":"8TAQa,MAAAA,EAAeC,EAAY,OAAQ,CAC9C,MAAO,KAAkB,CACvB,QAAS,CAAC,CAAA,GAEZ,QAAS,CACP,gBAA6B,CAC3B,OAAO,KAAK,OACd,CACF,EACA,QAAS,CACD,WAAWC,EAAqB,QAAAC,EAAA,sBACpC,MAAMC,EAAqB,CAAA,EACrBC,EAAoB,CAAA,EAC1B,UAAWC,KAAQJ,EACbI,KAAQ,KAAK,QACfF,EAAOE,CAAI,EAAI,KAAK,QAAQA,CAAI,GAEzBF,EAAAE,CAAI,EAAI,GACfD,EAAQ,KAAKC,CAAI,GAGjB,GAAAD,EAAQ,OAAS,EAAG,CAChB,MAAAE,EAAM,MAAMC,EAAsBH,CAAO,EAC/C,GAAIE,EACF,UAAWD,KAAQD,EACjBD,EAAOE,CAAI,EAAIC,EAAI,KAAKD,CAAI,EAC5B,KAAK,QAAQA,CAAI,EAAIC,EAAI,KAAKD,CAAI,CAGxC,CACO,OAAAF,CACT,GACF,EACA,QAAS,EACX,CAAC"}