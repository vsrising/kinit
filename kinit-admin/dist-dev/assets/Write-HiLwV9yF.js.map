{"version":3,"file":"Write-HiLwV9yF.js","sources":["../../src/views/Vadmin/Help/Issue/components/Write.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { Form, FormSchema } from '@/components/Form'\nimport { useForm } from '@/hooks/web/useForm'\nimport { reactive, ref } from 'vue'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { ContentWrap } from '@/components/ContentWrap'\n// import { useTagsViewStore } from '@/store/modules/tagsView'\nimport {\n  addIssueApi,\n  getIssueApi,\n  putIssueApi,\n  getIssueCategoryOptionsApi\n} from '@/api/vadmin/help/issue'\nimport { BaseButton } from '@/components/Button'\n\ndefineOptions({\n  name: 'HelpIssueForm'\n})\n\nconst { required } = useValidator()\nconst { push, currentRoute } = useRouter()\n\nconst editorConfig = {\n  customAlert: (s: string, t: string) => {\n    switch (t) {\n      case 'success':\n        ElMessage.success(s)\n        break\n      case 'info':\n        ElMessage.info(s)\n        break\n      case 'warning':\n        ElMessage.warning(s)\n        break\n      case 'error':\n        ElMessage.error(s)\n        break\n      default:\n        ElMessage.info(s)\n        break\n    }\n  },\n  autoFocus: false,\n  scroll: true,\n  readOnly: false,\n  uploadImgShowBase64: true,\n  placeholder: '请输入内容...'\n}\n\nconst formSchema = reactive<FormSchema[]>([\n  {\n    field: 'title',\n    label: '标题名称',\n    component: 'Input',\n    colProps: {\n      span: 24\n    },\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    },\n    formItemProps: {\n      rules: [required()]\n    }\n  },\n  {\n    field: 'content',\n    label: '内容',\n    colProps: {\n      span: 24\n    },\n    component: 'Editor',\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      editorConfig: editorConfig,\n      editorId: 'issueContent'\n    },\n    formItemProps: {\n      rules: [required()]\n    }\n  },\n  {\n    field: 'category_id',\n    label: '问题类别',\n    colProps: {\n      span: 24\n    },\n    component: 'Select',\n    componentProps: {\n      style: {\n        width: '100%'\n      }\n    },\n    formItemProps: {\n      rules: [required()]\n    },\n    optionApi: async () => {\n      const res = await getIssueCategoryOptionsApi()\n      return res.data\n    }\n  },\n  {\n    field: '',\n    label: '',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <>\n              <BaseButton loading={saveLoading.value} type=\"primary\" onClick={submit}>\n                立即保存\n              </BaseButton>\n            </>\n          )\n        }\n      }\n    }\n  }\n])\n\nconst { formRegister, formMethods } = useForm()\nconst { getFormData, getElFormExpose, setValues } = formMethods\n\nconst actionType = ref('')\nconst saveLoading = ref(false)\n\nconst initData = async () => {\n  const issueId = currentRoute.value.query.id\n  if (issueId) {\n    actionType.value = 'edit'\n    const res = await getIssueApi(Number(issueId))\n    if (res) {\n      setValues(res.data)\n    } else {\n      // 未获取到数据，跳转到404页面\n      push('/404')\n    }\n  } else {\n    actionType.value = 'add'\n  }\n}\n\ninitData()\n\nconst submit = async () => {\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validate()\n  if (valid) {\n    saveLoading.value = true\n    const formData = await getFormData()\n\n    if (!formData) {\n      saveLoading.value = false\n      return ElMessage.error('未获取到数据')\n    }\n    // const tagsViewStore = useTagsViewStore()\n    const res = ref()\n    try {\n      if (actionType.value === 'add') {\n        res.value = await addIssueApi(formData)\n        if (res.value) {\n          // 删除当前标签页，并跳转到列表页\n          // tagsViewStore.delView(unref(currentRoute))\n          // push('/help/issue')\n          elForm?.resetFields()\n          ElMessage.success('新增成功')\n        }\n      } else if (actionType.value === 'edit') {\n        res.value = await putIssueApi(formData)\n        if (res.value) {\n          // 删除当前标签页，并跳转到列表页\n          // tagsViewStore.delView(unref(currentRoute))\n          // push('/help/issue')\n          setValues(res.value.data)\n          ElMessage.success('更新成功')\n        }\n      }\n    } finally {\n      saveLoading.value = false\n    }\n  }\n}\n\ndefineExpose({\n  submit\n})\n</script>\n\n<template>\n  <ContentWrap\n    ><Form @register=\"formRegister\" :schema=\"formSchema\" labelPosition=\"top\"\n  /></ContentWrap>\n</template>\n"],"names":["required","useValidator","push","currentRoute","useRouter","editorConfig","customAlert","s","t","ElMessage","success","info","warning","error","autoFocus","scroll","readOnly","uploadImgShowBase64","placeholder","formSchema","reactive","field","label","component","colProps","span","componentProps","style","width","formItemProps","rules","editorId","optionApi","__async","getIssueCategoryOptionsApi","data","slots","default","_createVNode2","_Fragment","BaseButton","saveLoading","value","submit","_createTextVNode","formRegister","formMethods","useForm","getFormData","getElFormExpose","setValues","actionType","ref","issueId","query","id","res","getIssueApi","Number","elForm","validate","formData","addIssueApi","resetFields","putIssueApi","__expose"],"mappings":"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"}